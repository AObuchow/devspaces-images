======= BOOTSTRAP DOCKERFILE =======>
#
# Copyright (c) 2018-2023 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Red Hat, Inc. - initial API and implementation
#   IBM Corporation - implementation
#

# Builder: check meta.yamls and create index.json
# https://registry.access.redhat.com/ubi8/python-38
FROM registry.access.redhat.com/ubi8/python-38:1-121 as builder
#FROM registry-proxy.engineering.redhat.com/ubi8/python-38:1 as builder
USER 0

ARG BOOTSTRAP=true
ENV BOOTSTRAP=${BOOTSTRAP}
# if not defined or string is null, allow all registries/tags in list_referenced_images
# otherwise restrict to only those space-separated registries/tags; if others found, build will fail
# useful for failing build if quay images in an RC, or wrong devspaces image tag (3.2 in 3.1 build)
ARG ALLOWED_REGISTRIES=""
ENV ALLOWED_REGISTRIES=${ALLOWED_REGISTRIES}
ARG ALLOWED_TAGS=""
ENV ALLOWED_TAGS=${ALLOWED_TAGS}

COPY ./build/dockerfiles/content_sets_rhel8.repo /etc/yum.repos.d/
COPY ./build/dockerfiles/rhel.install.sh /tmp
RUN /tmp/rhel.install.sh && rm -f /tmp/rhel.install.sh

COPY ./build/scripts ./versions.json /build/
COPY ./build/scripts/clone_and_zip.sh /build/build/scripts/
COPY ./VERSION /
COPY ./devfiles /build/devfiles
WORKDIR /build/

RUN ./generate_devworkspace_templates.sh
RUN chmod -R g+rwX /build/resources

# validate devfile content
RUN ./check_referenced_images.sh devfiles --registries "${ALLOWED_REGISTRIES}" --tags "${ALLOWED_TAGS}"
RUN ./check_mandatory_fields.sh devfiles

# Cache projects in DS 
COPY ./build/dockerfiles/rhel.cache_projects.sh /tmp/ 
RUN /tmp/rhel.cache_projects.sh /build/ && rm -rf /tmp/rhel.cache_projects.sh /tmp/resources.tgz 

# don't do swaps, or we end up with missing content if built on s390x or ppc64le worker
# RUN ./swap_yamlfiles.sh devfiles
# RUN ./swap_images.sh devfiles
RUN ./index.sh > /build/devfiles/index.json && \
    ./list_referenced_images.sh devfiles > /build/devfiles/external_images.txt && \
    ./list_referenced_images_by_file.sh devfiles > /build/devfiles/external_images_by_devfile.txt && \
    chmod -R g+rwX /build/devfiles

<======= BOOTSTRAP DOCKERFILE =======
======= START BOOTSTRAP BUILD =======>
STEP 1/23: FROM registry.access.redhat.com/ubi8/python-38:1-121 AS builder
STEP 2/23: USER 0
--> 68b2c629903
STEP 3/23: ARG BOOTSTRAP=true
--> ff03f320a1e
STEP 4/23: ENV BOOTSTRAP=${BOOTSTRAP}
--> e3bb6a034b5
STEP 5/23: ARG ALLOWED_REGISTRIES=""
--> 0674250b9e2
STEP 6/23: ENV ALLOWED_REGISTRIES=${ALLOWED_REGISTRIES}
--> 21b33ac5a66
STEP 7/23: ARG ALLOWED_TAGS=""
--> d33dce1fafb
STEP 8/23: ENV ALLOWED_TAGS=${ALLOWED_TAGS}
--> 5a46b5ba2ae
STEP 9/23: COPY ./build/dockerfiles/content_sets_rhel8.repo /etc/yum.repos.d/
--> 3c8c045e187
STEP 10/23: COPY ./build/dockerfiles/rhel.install.sh /tmp
--> 3f91b4101ce
STEP 11/23: RUN /tmp/rhel.install.sh && rm -f /tmp/rhel.install.sh

Installed:
  containers-common-2:1-46.module+el8.7.0+17824+66a0202b.x86_64                 
  criu-3.15-3.module+el8.7.0+17824+66a0202b.x86_64                              
  fuse-common-3.3.0-16.el8.x86_64                                               
  fuse-overlayfs-1.9-1.module+el8.7.0+17824+66a0202b.x86_64                     
  fuse3-3.3.0-16.el8.x86_64                                                     
  fuse3-libs-3.3.0-16.el8.x86_64                                                
  iptables-libs-1.8.4-23.el8_7.1.x86_64                                         
  jansson-2.14-1.el8.x86_64                                                     
  jq-1.6-3.el8.x86_64                                                           
  kmod-25-19.el8.x86_64                                                         
  libibverbs-41.0-1.el8.x86_64                                                  
  libmnl-1.0.4-6.el8.x86_64                                                     
  libnet-1.1.6-15.el8.x86_64                                                    
  libnftnl-1.1.5-5.el8.x86_64                                                   
  libpcap-14:1.9.1-5.el8.x86_64                                                 
  libslirp-4.4.0-1.module+el8.7.0+17824+66a0202b.x86_64                         
  nftables-1:0.9.3-26.el8.x86_64                                                
  oniguruma-6.8.2-2.el8.x86_64                                                  
  protobuf-c-1.3.0-6.el8.x86_64                                                 
  runc-1:1.1.4-1.module+el8.7.0+17824+66a0202b.x86_64                           
  skopeo-2:1.9.4-0.1.module+el8.7.0+17824+66a0202b.x86_64                       
  slirp4netns-1.2.0-2.module+el8.7.0+17824+66a0202b.x86_64                      

Collecting yq
  Downloading https://files.pythonhosted.org/packages/aa/09/31d9eb047a46cf5680c4970f42bee931bd78aab4e3ded448406de4730f96/yq-3.1.1-py3-none-any.whl
Collecting argcomplete
  Downloading https://files.pythonhosted.org/packages/e5/24/5fcd33a691dbff91250c35dc241469f1f31c8f82b4020b70a548dc124777/argcomplete-2.1.2-py3-none-any.whl
Collecting toml>=0.10.0
  Downloading https://files.pythonhosted.org/packages/44/6f/7120676b6d73228c96e17f1f794d8ab046fc910d781c8d151120c3f1569e/toml-0.10.2-py2.py3-none-any.whl
Collecting PyYAML>=5.3.1
  Downloading https://files.pythonhosted.org/packages/d7/42/7ad4b6d67a16229496d4f6e74201bdbebcf4bc1e87d5a70c9297d4961bd2/PyYAML-6.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (701kB)
Collecting xmltodict>=0.11.0
  Downloading https://files.pythonhosted.org/packages/94/db/fd0326e331726f07ff7f40675cd86aa804bfd2e5016c727fa761c934990e/xmltodict-0.13.0-py2.py3-none-any.whl
Installing collected packages: toml, argcomplete, PyYAML, xmltodict, yq
Successfully installed PyYAML-6.0 argcomplete-2.1.2 toml-0.10.2 xmltodict-0.13.0 yq-3.1.1
python: Python 3.8.13
yq: yq 3.1.1
jq: jq-1.6
--> e6cba32fa99
STEP 12/23: COPY ./build/scripts ./versions.json /build/
--> 92d274ea354
STEP 13/23: COPY ./build/scripts/clone_and_zip.sh /build/build/scripts/
--> 19ba38e3ea6
STEP 14/23: COPY ./VERSION /
--> 744de140a7b
STEP 15/23: COPY ./devfiles /build/devfiles
--> e0164ca2025
STEP 16/23: WORKDIR /build/
--> 14e819684d1
STEP 17/23: RUN ./generate_devworkspace_templates.sh

> core-js@2.6.12 postinstall /build/node_modules/core-js
> node -e "try{require('./postinstall')}catch(e){}"

[96mThank you for using core-js ([94m https://github.com/zloirock/core-js [96m) for polyfilling JavaScript standard library![0m

[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: [0m
[96m>[94m https://opencollective.com/core-js [0m
[96m>[94m https://www.patreon.com/zloirock [0m

[96mAlso, the author of core-js ([94m https://github.com/zloirock [96m) is looking for a good job -)[0m

+ @eclipse-che/che-devworkspace-generator@0.0.1-c8bd5c0
added 119 packages from 183 contributors and audited 119 packages in 10.267s

5 packages are looking for funding
  run `npm fund` for details

found 2 vulnerabilities (1 moderate, 1 high)
  run `npm audit fix` to fix them, or `npm audit` for details
DevWorkspace che-theia-java-lombok was generated.
DevWorkspace che-code-java-lombok was generated.
DevWorkspace che-code-java-lombok was generated.
DevWorkspace che-idea-java-lombok was generated.
DevWorkspace che-theia-quarkus-quickstart was generated.
DevWorkspace che-code-quarkus-quickstart was generated.
DevWorkspace che-code-quarkus-quickstart was generated.
DevWorkspace che-idea-quarkus-quickstart was generated.
DevWorkspace che-theia-nodejs-mongodb was generated.
DevWorkspace che-code-nodejs-mongodb was generated.
DevWorkspace che-code-nodejs-mongodb was generated.
DevWorkspace che-idea-nodejs-mongodb was generated.
DevWorkspace che-theia-nodejs-web-app was generated.
DevWorkspace che-code-nodejs-web-app was generated.
DevWorkspace che-code-nodejs-web-app was generated.
DevWorkspace che-idea-nodejs-web-app was generated.
DevWorkspace che-theia-python-hello-world was generated.
DevWorkspace che-code-python-hello-world was generated.
DevWorkspace che-code-python-hello-world was generated.
DevWorkspace che-idea-python-hello-world was generated.
DevWorkspace che-theia-cpp was generated.
DevWorkspace che-code-cpp was generated.
DevWorkspace che-code-cpp was generated.
DevWorkspace che-idea-cpp was generated.
DevWorkspace che-theia-dotnet was generated.
DevWorkspace che-code-dotnet was generated.
DevWorkspace che-code-dotnet was generated.
DevWorkspace che-idea-dotnet was generated.
DevWorkspace che-theia-golang was generated.
DevWorkspace che-code-golang was generated.
DevWorkspace che-code-golang was generated.
DevWorkspace che-idea-golang was generated.
DevWorkspace che-theia-php-hello-world was generated.
DevWorkspace che-code-php-hello-world was generated.
DevWorkspace che-code-php-hello-world was generated.
DevWorkspace che-idea-php-hello-world was generated.
--> 67c3a0198e1
STEP 18/23: RUN chmod -R g+rwX /build/resources
--> 1c270150ccd
STEP 19/23: RUN ./check_referenced_images.sh devfiles --registries "${ALLOWED_REGISTRIES}" --tags "${ALLOWED_TAGS}"
 + registry.redhat.io/devspaces/code-rhel8:3.6 PASS - 3.6 allowed
 + registry.redhat.io/devspaces/idea-rhel8:3.6 PASS - 3.6 allowed
 + registry.redhat.io/devspaces/machineexec-rhel8:3.6 PASS - 3.6 allowed
 + registry.redhat.io/devspaces/theia-endpoint-rhel8:3.6 PASS - 3.6 allowed
 + registry.redhat.io/devspaces/theia-rhel8:3.6 PASS - 3.6 allowed
 + registry.redhat.io/devspaces/udi-rhel8:3.6 PASS - 3.6 allowed
 = registry.redhat.io/rhscl/mongodb-36-rhel7:1-50 PASS
--> e891db99cbb
STEP 20/23: RUN ./check_mandatory_fields.sh devfiles
Checking devfile 'devfiles/TP__cpp__c-plus-plus/meta.yaml'
Checking devfile 'devfiles/TP__dotnet__dotnet-web-simple/meta.yaml'
Checking devfile 'devfiles/TP__go__golang-health-check/meta.yaml'
Checking devfile 'devfiles/TP__php__php-hello-world/meta.yaml'
Checking devfile 'devfiles/java11-maven-lombok__lombok-project-sample/meta.yaml'
Checking devfile 'devfiles/java11-maven-quarkus__quarkus-quickstarts/meta.yaml'
Checking devfile 'devfiles/nodejs__nodejs-mongodb-sample/meta.yaml'
Checking devfile 'devfiles/nodejs__web-nodejs-sample/meta.yaml'
Checking devfile 'devfiles/python__python-hello-world/meta.yaml'
--> d140aa024f9
STEP 21/23: COPY ./build/dockerfiles/rhel.cache_projects.sh /tmp/ 
--> 2bee28035bb
STEP 22/23: RUN /tmp/rhel.cache_projects.sh /build/ && rm -rf /tmp/rhel.cache_projects.sh /tmp/resources.tgz 
--> fb876d31d0c
STEP 23/23: RUN ./index.sh > /build/devfiles/index.json &&     ./list_referenced_images.sh devfiles > /build/devfiles/external_images.txt &&     ./list_referenced_images_by_file.sh devfiles > /build/devfiles/external_images_by_devfile.txt &&     chmod -R g+rwX /build/devfiles
COMMIT devfileregistry:tmp
--> a4954dac72a
Successfully tagged localhost/devfileregistry:tmp
a4954dac72a86219a1c604e48beb2c477968e701cd9ff05662c3b6e60c930eb3
<======= END BOOTSTRAP BUILD =======
Downloading root-local.tgz
Downloading resources.tgz
DIFF START *****
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/argcomplete/_check_module.py /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/argcomplete/_check_module.py
--- /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/argcomplete/_check_module.py	2023-03-14 18:24:33.000000000 -0400
+++ /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/argcomplete/_check_module.py	2023-03-19 04:53:17.030036833 -0400
@@ -69,13 +69,9 @@
         raise ArgcompleteMarkerNotFound("missing argument on the command line")
 
     filename = find(name)
-    if hasattr(tokenize, "open"):
-        open_func = tokenize.open
-    else:
-        open_func = open
 
     try:
-        fp = open_func(filename)
+        fp = tokenize.open(filename)
     except OSError:
         raise ArgcompleteMarkerNotFound("cannot open file")
 
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/argcomplete/__init__.py /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/argcomplete/__init__.py
--- /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/argcomplete/__init__.py	2023-03-14 18:24:33.000000000 -0400
+++ /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/argcomplete/__init__.py	2023-03-19 04:53:17.030036833 -0400
@@ -5,6 +5,7 @@
 import contextlib
 import os
 import sys
+from typing import Dict, List, Tuple
 
 from . import completers
 from . import my_shlex as shlex
@@ -142,7 +143,7 @@
         self.validator = validator
         self.print_suppressed = print_suppressed
         self.completing = False
-        self._display_completions = {}
+        self._display_completions: Dict[Tuple[str], str] = {}
         self.default_completer = default_completer
         if append_space is None:
             append_space = os.environ.get("_ARGCOMPLETE_SUPPRESS_SPACE") != "1"
@@ -197,7 +198,7 @@
         added to argcomplete.safe_actions, if their values are wanted in the ``parsed_args`` completer argument, or
         their execution is otherwise desirable.
         """
-        self.__init__(
+        self.__init__(  # type: ignore
             argument_parser,
             always_complete_options=always_complete_options,
             exclude=exclude,
@@ -319,8 +320,8 @@
         figure out which subparsers need to be activated (then recursively monkey-patch those).
         We save all active ArgumentParsers to extract all their possible option names later.
         """
-        self.active_parsers = []
-        self.visited_positionals = []
+        self.active_parsers: List[argparse.ArgumentParser] = []
+        self.visited_positionals: List[argparse.Action] = []
 
         completer = self
 
@@ -340,7 +341,7 @@
                     continue
 
                 # TODO: accomplish this with super
-                class IntrospectAction(action.__class__):
+                class IntrospectAction(action.__class__):  # type: ignore
                     def __call__(self, parser, namespace, values, option_string=None):
                         debug("Action stub called on", self)
                         debug("\targs:", parser, namespace, values, option_string)
@@ -374,7 +375,7 @@
         def filter_aliases(aliases, prefix):
             return tuple(x for x in aliases if x.startswith(prefix))
 
-        aliases_by_parser = {}
+        aliases_by_parser: Dict[argparse.ArgumentParser, List[str]] = {}
         for key in parser.choices.keys():
             p = parser.choices[key]
             aliases_by_parser.setdefault(p, []).append(key)
@@ -399,13 +400,10 @@
         return []
 
     def _get_option_completions(self, parser, cword_prefix):
-        self._display_completions.update(
-            [
-                [tuple(x for x in action.option_strings if x.startswith(cword_prefix)), action.help]
-                for action in parser._actions
-                if action.option_strings
-            ]
-        )
+        for action in parser._actions:
+            if action.option_strings:
+                active_option_strings = tuple(str(x) for x in action.option_strings if x.startswith(cword_prefix))
+                self._display_completions[active_option_strings] = action.help  # type: ignore
 
         option_completions = []
         for action in parser._actions:
@@ -494,20 +492,19 @@
 
                     if completions_from_callable:
                         completions += completions_from_callable
-                        if isinstance(completer, completers.ChoicesCompleter):
-                            self._display_completions.update(
-                                [[(x,), active_action.help] for x in completions_from_callable]
-                            )
-                        else:
-                            self._display_completions.update([[(x,), ""] for x in completions_from_callable])
+                        for x in completions_from_callable:
+                            if isinstance(completer, completers.ChoicesCompleter):
+                                self._display_completions[(x,)] = active_action.help
+                            else:
+                                self._display_completions[(x,)] = ""
                 else:
                     debug("Completer is not callable, trying the readline completer protocol instead")
                     for i in range(9999):
-                        next_completion = completer.complete(cword_prefix, i)
+                        next_completion = completer.complete(cword_prefix, i)  # type: ignore
                         if next_completion is None:
                             break
                         if self.validator(next_completion, cword_prefix):
-                            self._display_completions.update({(next_completion,): ""})
+                            self._display_completions.update({(next_completion,): ""})  # type: ignore
                             completions.append(next_completion)
                 if optional_prefix:
                     completions = [optional_prefix + "=" + completion for completion in completions]
@@ -570,16 +567,19 @@
 
     def filter_completions(self, completions):
         """
-        Ensures collected completions are Unicode text, de-duplicates them, and excludes those specified by ``exclude``.
-        Returns the filtered completions as an iterable.
+        De-duplicates completions and excludes those specified by ``exclude``.
+        Returns the filtered completions as a list.
 
         This method is exposed for overriding in subclasses; there is no need to use it directly.
         """
-        # De-duplicate completions and remove excluded ones
-        if self.exclude is None:
-            self.exclude = set()
-        seen = set(self.exclude)
-        return [c for c in completions if c not in seen and not seen.add(c)]
+        filtered_completions = []
+        for completion in completions:
+            if self.exclude is not None:
+                if completion in self.exclude:
+                    continue
+            if completion not in filtered_completions:
+                filtered_completions.append(completion)
+        return filtered_completions
 
     def quote_completions(self, completions, cword_prequote, last_wordbreak_pos):
         """
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/argcomplete/my_argparse.py /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/argcomplete/my_argparse.py
--- /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/argcomplete/my_argparse.py	2023-03-14 18:24:33.000000000 -0400
+++ /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/argcomplete/my_argparse.py	2023-03-19 04:53:17.030036833 -0400
@@ -1,8 +1,6 @@
 # Copyright 2012-2021, Andrey Kislyuk and argcomplete contributors.
 # Licensed under the Apache License. See https://github.com/kislyuk/argcomplete for more info.
 
-import typing as t
-from argparse import _  # type:ignore
 from argparse import (
     ONE_OR_MORE,
     OPTIONAL,
@@ -10,18 +8,20 @@
     REMAINDER,
     SUPPRESS,
     ZERO_OR_MORE,
+    Action,
     ArgumentError,
     ArgumentParser,
     _get_action_name,
     _SubParsersAction,
 )
+from gettext import gettext
+from typing import Dict, List, Set, Tuple
 
-_num_consumed_args: t.Dict[str, int] = {}
+_num_consumed_args: Dict[Action, int] = {}
 
 
 def action_is_satisfied(action):
-    ''' Returns False if the parse would raise an error if no more arguments are given to this action, True otherwise.
-    '''
+    '''Returns False if the parse would raise an error if no more arguments are given to this action, True otherwise.'''
     num_consumed_args = _num_consumed_args.get(action, 0)
 
     if action.nargs in [OPTIONAL, ZERO_OR_MORE, REMAINDER]:
@@ -40,8 +40,7 @@
 
 
 def action_is_open(action):
-    ''' Returns True if action could consume more arguments (i.e., its pattern is open).
-    '''
+    '''Returns True if action could consume more arguments (i.e., its pattern is open).'''
     num_consumed_args = _num_consumed_args.get(action, 0)
 
     if action.nargs in [ZERO_OR_MORE, ONE_OR_MORE, PARSER, REMAINDER]:
@@ -54,7 +53,7 @@
 
 
 def action_is_greedy(action, isoptional=False):
-    ''' Returns True if action will necessarily consume the next argument.
+    '''Returns True if action will necessarily consume the next argument.
     isoptional indicates whether the argument is an optional (starts with -).
     '''
     num_consumed_args = _num_consumed_args.get(action, 0)
@@ -68,28 +67,28 @@
 
 
 class IntrospectiveArgumentParser(ArgumentParser):
-    ''' The following is a verbatim copy of ArgumentParser._parse_known_args (Python 2.7.3),
+    '''The following is a verbatim copy of ArgumentParser._parse_known_args (Python 2.7.3),
     except for the lines that contain the string "Added by argcomplete".
     '''
 
     def _parse_known_args(self, arg_strings, namespace):
         _num_consumed_args.clear()  # Added by argcomplete
         self._argcomplete_namespace = namespace
-        self.active_actions = []  # Added by argcomplete
+        self.active_actions: List[Action] = []  # Added by argcomplete
         # replace arg strings that are file references
         if self.fromfile_prefix_chars is not None:
             arg_strings = self._read_args_from_files(arg_strings)
 
         # map all mutually exclusive arguments to the other arguments
         # they can't occur with
-        action_conflicts = {}
+        action_conflicts: Dict[Action, List[Action]] = {}
         self._action_conflicts = action_conflicts  # Added by argcomplete
         for mutex_group in self._mutually_exclusive_groups:
             group_actions = mutex_group._group_actions
             for i, mutex_action in enumerate(mutex_group._group_actions):
                 conflicts = action_conflicts.setdefault(mutex_action, [])
                 conflicts.extend(group_actions[:i])
-                conflicts.extend(group_actions[i + 1:])
+                conflicts.extend(group_actions[i + 1 :])
 
         # find all option indices, and determine the arg_string_pattern
         # which has an 'O' if there is an option at an index,
@@ -98,7 +97,6 @@
         arg_string_pattern_parts = []
         arg_strings_iter = iter(arg_strings)
         for i, arg_string in enumerate(arg_strings_iter):
-
             # all args after -- are non-options
             if arg_string == '--':
                 arg_string_pattern_parts.append('-')
@@ -120,8 +118,8 @@
         arg_strings_pattern = ''.join(arg_string_pattern_parts)
 
         # converts arg strings to the appropriate and then takes the action
-        seen_actions = set()
-        seen_non_default_actions = set()
+        seen_actions: Set[Action] = set()
+        seen_non_default_actions: Set[Action] = set()
         self._seen_non_default_actions = seen_non_default_actions  # Added by argcomplete
 
         def take_action(action, argument_strings, option_string=None):
@@ -135,14 +133,13 @@
                 seen_non_default_actions.add(action)
                 for conflict_action in action_conflicts.get(action, []):
                     if conflict_action in seen_non_default_actions:
-                        msg = _('not allowed with argument %s')
+                        msg = gettext('not allowed with argument %s')
                         action_name = _get_action_name(conflict_action)
                         raise ArgumentError(action, msg % action_name)
 
             # take the action if we didn't receive a SUPPRESS value
             # (e.g. from a default)
-            if argument_values is not SUPPRESS \
-                    or isinstance(action, _SubParsersAction):
+            if argument_values is not SUPPRESS or isinstance(action, _SubParsersAction):
                 try:
                     action(self, namespace, argument_values, option_string)
                 except BaseException:
@@ -159,7 +156,6 @@
 
         # function to convert arg_strings into an optional action
         def consume_optional(start_index):
-
             # get the optional identified at this index
             option_tuple = option_string_indices[start_index]
             action, option_string, explicit_arg = option_tuple
@@ -167,9 +163,8 @@
             # identify additional optionals in the same arg string
             # (e.g. -xyz is the same as -x -y -z if no args are required)
             match_argument = self._match_argument
-            action_tuples = []
+            action_tuples: List[Tuple[Action, List[str], str]] = []
             while True:
-
                 # if we found no optional action, skip it
                 if action is None:
                     extras.append(arg_strings[start_index])
@@ -194,7 +189,7 @@
                             action = optionals_map[option_string]
                             explicit_arg = new_explicit_arg
                         else:
-                            msg = _('ignored explicit argument %r')
+                            msg = gettext('ignored explicit argument %r')
                             raise ArgumentError(action, msg % explicit_arg)
 
                     # if the action expect exactly one argument, we've
@@ -208,7 +203,7 @@
                     # error if a double-dash option did not use the
                     # explicit argument
                     else:
-                        msg = _('ignored explicit argument %r')
+                        msg = gettext('ignored explicit argument %r')
                         raise ArgumentError(action, msg % explicit_arg)
 
                 # if there is no explicit argument, try to match the
@@ -257,14 +252,14 @@
             for action, arg_count in zip(positionals, arg_counts):  # Added by argcomplete
                 self.active_actions.append(action)  # Added by argcomplete
             for action, arg_count in zip(positionals, arg_counts):
-                args = arg_strings[start_index: start_index + arg_count]
+                args = arg_strings[start_index : start_index + arg_count]
                 start_index += arg_count
-                _num_consumed_args[action] = len(args)   # Added by argcomplete
+                _num_consumed_args[action] = len(args)  # Added by argcomplete
                 take_action(action, args)
 
             # slice off the Positionals that we just parsed and return the
             # index at which the Positionals' string args stopped
-            positionals[:] = positionals[len(arg_counts):]
+            positionals[:] = positionals[len(arg_counts) :]
             return start_index
 
         # consume Positionals and Optionals alternately, until we have
@@ -276,12 +271,8 @@
         else:
             max_option_string_index = -1
         while start_index <= max_option_string_index:
-
             # consume any Positionals preceding the next option
-            next_option_string_index = min([
-                index
-                for index in option_string_indices
-                if index >= start_index])
+            next_option_string_index = min([index for index in option_string_indices if index >= start_index])
             if start_index != next_option_string_index:
                 positionals_end_index = consume_positionals(start_index)
 
@@ -314,14 +305,14 @@
 
         if positionals:
             self.active_actions.append(positionals[0])  # Added by argcomplete
-            self.error(_('too few arguments'))
+            self.error(gettext('too few arguments'))
 
         # make sure all required actions were present
         for action in self._actions:
             if action.required:
                 if action not in seen_actions:
                     name = _get_action_name(action)
-                    self.error(_('argument %s is required') % name)
+                    self.error(gettext('argument %s is required') % name)
 
         # make sure all required groups had one option present
         for group in self._mutually_exclusive_groups:
@@ -332,10 +323,10 @@
 
                 # if no actions were used, report the error
                 else:
-                    names = [_get_action_name(action)
-                             for action in group._group_actions
-                             if action.help is not SUPPRESS]
-                    msg = _('one of the arguments %s is required')
+                    names = [
+                        str(_get_action_name(action)) for action in group._group_actions if action.help is not SUPPRESS
+                    ]
+                    msg = gettext('one of the arguments %s is required')
                     self.error(msg % ' '.join(names))
 
         # return the updated namespace and the extra arguments
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/argcomplete/my_shlex.py /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/argcomplete/my_shlex.py
--- /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/argcomplete/my_shlex.py	2023-03-14 18:24:33.000000000 -0400
+++ /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/argcomplete/my_shlex.py	2023-03-19 04:53:17.030036833 -0400
@@ -1,5 +1,3 @@
-# -*- coding: utf-8 -*-
-
 # This copy of shlex.py from Python 3.6 is distributed with argcomplete.
 # It contains only the shlex class, with modifications as noted.
 
@@ -15,26 +13,16 @@
 import os
 import sys
 from collections import deque
+from io import StringIO
+from typing import Optional
 
-# Modified by argcomplete: 2/3 compatibility
-# Note: cStringIO is not compatible with Unicode
-try:
-    from StringIO import StringIO  # type:ignore
-except ImportError:
-    from io import StringIO
-
-# Modified by argcomplete: 2/3 compatibility
-try:
-    basestring  # type:ignore
-except NameError:
-    basestring = str
 
 class shlex:
     "A lexical analyzer class for simple shell-like syntaxes."
-    def __init__(self, instream=None, infile=None, posix=False,
-                 punctuation_chars=False):
+
+    def __init__(self, instream=None, infile=None, posix=False, punctuation_chars=False):
         # Modified by argcomplete: 2/3 compatibility
-        if isinstance(instream, basestring):
+        if isinstance(instream, str):
             instream = StringIO(instream)
         if instream is not None:
             self.instream = instream
@@ -48,8 +36,7 @@
         else:
             self.eof = ''
         self.commenters = '#'
-        self.wordchars = ('abcdfeghijklmnopqrstuvwxyz'
-                          'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_')
+        self.wordchars = 'abcdfeghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_'
         # Modified by argcomplete: 2/3 compatibility
         # if self.posix:
         #     self.wordchars += ('ßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýþÿ'
@@ -59,12 +46,12 @@
         self.quotes = '\'"'
         self.escape = '\\'
         self.escapedquotes = '"'
-        self.state = ' '
-        self.pushback = deque()
+        self.state: Optional[str] = ' '
+        self.pushback: deque = deque()
         self.lineno = 1
         self.debug = 0
         self.token = ''
-        self.filestack = deque()
+        self.filestack: deque = deque()
         self.source = None
         if not punctuation_chars:
             punctuation_chars = ''
@@ -73,10 +60,10 @@
         self.punctuation_chars = punctuation_chars
         if punctuation_chars:
             # _pushback_chars is a push back queue used by lookahead logic
-            self._pushback_chars = deque()
+            self._pushback_chars: deque = deque()
             # these chars added because allowed in file names, args, wildcards
             self.wordchars += '~-./*?='
-            #remove any punctuation chars from wordchars
+            # remove any punctuation chars from wordchars
             t = self.wordchars.maketrans(dict.fromkeys(punctuation_chars))
             self.wordchars = self.wordchars.translate(t)
 
@@ -93,7 +80,7 @@
     def push_source(self, newstream, newfile=None):
         "Push an input source onto the lexer's input source stack."
         # Modified by argcomplete: 2/3 compatibility
-        if isinstance(newstream, basestring):
+        if isinstance(newstream, str):
             newstream = StringIO(newstream)
         self.filestack.appendleft((self.infile, self.instream, self.lineno))
         self.infile = newfile
@@ -110,8 +97,7 @@
         self.instream.close()
         (self.infile, self.instream, self.lineno) = self.filestack.popleft()
         if self.debug:
-            print('shlex: popping to %s, line %d' \
-                  % (self.instream, self.lineno))
+            print('shlex: popping to %s, line %d' % (self.instream, self.lineno))
         self.state = ' '
 
     def get_token(self):
@@ -157,10 +143,9 @@
             if nextchar == '\n':
                 self.lineno += 1
             if self.debug >= 3:
-                print("shlex: in state %r I see character: %r" % (self.state,
-                                                                  nextchar))
+                print("shlex: in state %r I see character: %r" % (self.state, nextchar))
             if self.state is None:
-                self.token = ''        # past end of file
+                self.token = ''  # past end of file
                 break
             elif self.state == ' ':
                 if not nextchar:
@@ -170,7 +155,7 @@
                     if self.debug >= 2:
                         print("shlex: I see whitespace in whitespace state")
                     if self.token or (self.posix and quoted):
-                        break   # emit current token
+                        break  # emit current token
                     else:
                         continue
                 elif nextchar in self.commenters:
@@ -195,12 +180,12 @@
                 else:
                     self.token = nextchar
                     if self.token or (self.posix and quoted):
-                        break   # emit current token
+                        break  # emit current token
                     else:
                         continue
             elif self.state in self.quotes:
                 quoted = True
-                if not nextchar:      # end of file
+                if not nextchar:  # end of file
                     if self.debug >= 2:
                         print("shlex: I see EOF in quotes state")
                     # XXX what error should be raised here?
@@ -212,35 +197,33 @@
                         break
                     else:
                         self.state = 'a'
-                elif (self.posix and nextchar in self.escape and self.state
-                      in self.escapedquotes):
+                elif self.posix and nextchar in self.escape and self.state in self.escapedquotes:
                     escapedstate = self.state
                     self.state = nextchar
                 else:
                     self.token += nextchar
             elif self.state in self.escape:
-                if not nextchar:      # end of file
+                if not nextchar:  # end of file
                     if self.debug >= 2:
                         print("shlex: I see EOF in escape state")
                     # XXX what error should be raised here?
                     raise ValueError("No escaped character")
                 # In posix shells, only the quote itself or the escape
                 # character may be escaped within quotes.
-                if (escapedstate in self.quotes and
-                        nextchar != self.state and nextchar != escapedstate):
+                if escapedstate in self.quotes and nextchar != self.state and nextchar != escapedstate:
                     self.token += self.state
                 self.token += nextchar
                 self.state = escapedstate
             elif self.state in ('a', 'c'):
                 if not nextchar:
-                    self.state = None   # end of file
+                    self.state = None  # end of file
                     break
                 elif nextchar in self.whitespace:
                     if self.debug >= 2:
                         print("shlex: I see whitespace in word state")
                     self.state = ' '
                     if self.token or (self.posix and quoted):
-                        break   # emit current token
+                        break  # emit current token
                     else:
                         continue
                 elif nextchar in self.commenters:
@@ -249,7 +232,7 @@
                     if self.posix:
                         self.state = ' '
                         if self.token or (self.posix and quoted):
-                            break   # emit current token
+                            break  # emit current token
                         else:
                             continue
                 elif self.posix and nextchar in self.quotes:
@@ -265,8 +248,7 @@
                             self._pushback_chars.append(nextchar)
                         self.state = ' '
                         break
-                elif (nextchar in self.wordchars or nextchar in self.quotes
-                      or self.whitespace_split):
+                elif nextchar in self.wordchars or nextchar in self.quotes or self.whitespace_split:
                     self.token += nextchar
                     # Modified by argcomplete: Record last wordbreak position
                     if nextchar in self.wordbreaks:
@@ -280,10 +262,10 @@
                         print("shlex: I see punctuation in word state")
                     self.state = ' '
                     if self.token or (self.posix and quoted):
-                        break   # emit current token
+                        break  # emit current token
                     else:
                         continue
-        result = self.token
+        result: Optional[str] = self.token
         self.token = ''
         if self.posix and not quoted and result == '':
             result = None
@@ -303,7 +285,7 @@
             newfile = newfile[1:-1]
         # This implements cpp-like semantics for relative-path inclusion.
         # Modified by argcomplete: 2/3 compatibility
-        if isinstance(self.infile, basestring) and not os.path.isabs(newfile):
+        if isinstance(self.infile, str) and not os.path.isabs(newfile):
             newfile = os.path.join(os.path.dirname(self.infile), newfile)
         return (newfile, open(newfile, "r"))
 
Only in /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/argcomplete: py.typed
Only in /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages: argcomplete-2.1.1.dist-info
Only in /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages: argcomplete-2.1.2.dist-info
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/PyYAML-6.0.dist-info/METADATA /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/PyYAML-6.0.dist-info/METADATA
--- /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/PyYAML-6.0.dist-info/METADATA	2023-03-14 18:24:33.000000000 -0400
+++ /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/PyYAML-6.0.dist-info/METADATA	2023-03-19 04:53:17.029036833 -0400
@@ -3,10 +3,10 @@
 Version: 6.0
 Summary: YAML parser and emitter for Python
 Home-page: https://pyyaml.org/
-Download-URL: https://pypi.org/project/PyYAML/
 Author: Kirill Simonov
 Author-email: xi@resolvent.net
 License: MIT
+Download-URL: https://pypi.org/project/PyYAML/
 Project-URL: Bug Tracker, https://github.com/yaml/pyyaml/issues
 Project-URL: CI, https://github.com/yaml/pyyaml/actions
 Project-URL: Documentation, https://pyyaml.org/wiki/PyYAMLDocumentation
@@ -43,3 +43,4 @@
 
 PyYAML is applicable for a broad range of tasks from complex
 configuration files to object serialization and persistence.
+
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/PyYAML-6.0.dist-info/RECORD /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/PyYAML-6.0.dist-info/RECORD
--- /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/PyYAML-6.0.dist-info/RECORD	2023-03-14 18:24:33.000000000 -0400
+++ /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/PyYAML-6.0.dist-info/RECORD	2023-03-19 04:53:17.029036833 -0400
@@ -1,8 +1,8 @@
 PyYAML-6.0.dist-info/INSTALLER,sha256=zuuue4knoyJ-UwPPXg8fezS7VCrXJQrAP7zeNuwvFQg,4
 PyYAML-6.0.dist-info/LICENSE,sha256=jTko-dxEkP1jVwfLiOsmvXZBAqcoKVQwfT5RZ6V36KQ,1101
-PyYAML-6.0.dist-info/METADATA,sha256=Q56A1jQxEnzMMCyqgYkqM5Egvr9y18VExGF3ciGLjlY,2005
+PyYAML-6.0.dist-info/METADATA,sha256=QmHx9kGp_0yezQCXYaft4eEFeJ6W4oyFfYwHDLP1kdg,2006
 PyYAML-6.0.dist-info/RECORD,,
-PyYAML-6.0.dist-info/WHEEL,sha256=q64M4lAWOr6eqbs0L0fvZKS87xBNWz2Lb7YBpE1K7J4,104
+PyYAML-6.0.dist-info/WHEEL,sha256=RiwktpmF40OphKd3_aIG01PzIOQlJ7dpBn3cFSc9vak,217
 PyYAML-6.0.dist-info/top_level.txt,sha256=rpj0IVMTisAjh_1vG3Ccf9v5jpCQwAz6cD1IVU5ZdhQ,11
 _yaml/__init__.py,sha256=04Ae_5osxahpJHa3XBZUAf4wi6XX32gR8D6X6p64GEA,1402
 _yaml/__pycache__/__init__.cpython-38.pyc,,
@@ -24,6 +24,7 @@
 yaml/__pycache__/scanner.cpython-38.pyc,,
 yaml/__pycache__/serializer.cpython-38.pyc,,
 yaml/__pycache__/tokens.cpython-38.pyc,,
+yaml/_yaml.cpython-38-x86_64-linux-gnu.so,sha256=lMaKSmQZy3WNZSmmU0Wg5Y5ZAs-HR5vItyGVUIsp8Rg,2847784
 yaml/composer.py,sha256=_Ko30Wr6eDWUeUpauUGT3Lcg9QPBnOPVlTnIMRGJ9FM,4883
 yaml/constructor.py,sha256=kNgkfaeLUkwQYY_Q6Ff1Tz2XVw_pG1xVE9Ak7z-viLA,28639
 yaml/cyaml.py,sha256=6ZrAG9fAYvdVe2FK_w0hmXoG7ZYsoYUwapG8CiC72H0,3851
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/PyYAML-6.0.dist-info/WHEEL /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/PyYAML-6.0.dist-info/WHEEL
--- /tmp/tmp.BgLHYrVZuR/lib/python3.8/site-packages/PyYAML-6.0.dist-info/WHEEL	2023-03-14 18:24:33.000000000 -0400
+++ /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/PyYAML-6.0.dist-info/WHEEL	2023-03-19 04:53:17.029036833 -0400
@@ -1,5 +1,8 @@
 Wheel-Version: 1.0
-Generator: bdist_wheel (0.40.0)
+Generator: bdist_wheel (0.37.0)
 Root-Is-Purelib: false
-Tag: cp38-cp38-linux_ppc64le
+Tag: cp38-cp38-manylinux_2_5_x86_64
+Tag: cp38-cp38-manylinux1_x86_64
+Tag: cp38-cp38-manylinux_2_12_x86_64
+Tag: cp38-cp38-manylinux2010_x86_64
 
Only in /tmp/tmp.fFq6vVcWCb/lib/python3.8/site-packages/yaml: _yaml.cpython-38-x86_64-linux-gnu.so
***** END DIFF
Untagged: localhost/devfileregistry:tmp
Deleted: a4954dac72a86219a1c604e48beb2c477968e701cd9ff05662c3b6e60c930eb3
Deleted: fb876d31d0c61eadb594b942d2ef66aad08e53265fff5c893e3de0ca8575bd93
Deleted: 2bee28035bb430b6e4c2b5cc4617addf751d13a8c495eafadc6cc0fb44992094
Deleted: d140aa024f9bf4b280ce66d3f002b8e9dd62130e6b715f6ca4f769a59099d2b3
Deleted: e891db99cbb6e28dc577ff2fcfea6cce0f2e5999dec868c64ca7ffb656c6e215
Deleted: 1c270150ccd165d5d1b18954f60ad806a64ccac6793a61fecbbda5bbdb972fbc
Deleted: 67c3a0198e123874cef00ee38a623f08297b72b5b87259d5096dcda28edff8a7
Deleted: 14e819684d1800ea0c9a6c1456ece1973cf008bea3668248b3d45b15956b181a
Deleted: e0164ca202553490108c0262b3d9bbccfd4cd634ac94ecbddcc56bc31195feb1
Deleted: 744de140a7bdf32998fd8b2f639e46009670f71707dcf66e0830ba04d33d18c6
Deleted: 19ba38e3ea6d19ad607c3eb224ec7a35074a338d1c5c605f319a115cde1d5fbf
Deleted: 92d274ea35426e0bf5019ddd3bd6c5b410098abc38982d294251f4bb1b477246
Deleted: e6cba32fa9998a8a556742ca8c5770979821002d439c366b67dc5c8474a495fd
Deleted: 3f91b4101ce2d131015c7b349edd251eac04aa6e30e8c36f93f5e0713037e0de
Deleted: 3c8c045e187f334b1c90d50ef4e39e8c002a2013ff049be3fdf964acbbb4f2b9
Deleted: 5a46b5ba2ae51478020c8ce61a3974fc072921225df97816d34a373f70281530
Deleted: d33dce1fafb06709b1f217f136c9a32e6300a5f2b824a6fd28dd46d91ea9e403
Deleted: 21b33ac5a669bde9e8d14fe70a2a865a6cf4a0df6088696e2ea2dc9f30fc2511
Deleted: 0674250b9e2964851f8df34941377d7854b7815e056cef59a325bdecede0d831
Deleted: e3bb6a034b56d632082b05cbb6383b9dc1f520f4aa565507ca73e8119df88ce7
Deleted: ff03f320a1e5852d82cde9468f9f4b70ba2c5d646b5ed287f6ae6f71693fb040
Deleted: 68b2c6299030c02d1eaea0526b948041d9fcc08e94a617dcb7cd3144d4caa6cd
Uploading: root-local.tgz
File already uploaded: resources.tgz
Source upload succeeded. Don't forget to commit the sources file
rm 'resources.tgz'
rm 'root-local.tgz'
