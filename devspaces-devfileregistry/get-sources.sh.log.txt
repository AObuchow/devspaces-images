======= BOOTSTRAP DOCKERFILE =======>
#
# Copyright (c) 2018-2023 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Red Hat, Inc. - initial API and implementation
#   IBM Corporation - implementation
#

# Builder: check meta.yamls and create index.json
# https://registry.access.redhat.com/ubi8/python-38
FROM registry.access.redhat.com/ubi8/python-38:1-121 as builder
#FROM registry-proxy.engineering.redhat.com/ubi8/python-38:1 as builder
USER 0

ARG BOOTSTRAP=true
ENV BOOTSTRAP=${BOOTSTRAP}
# if not defined or string is null, allow all registries/tags in list_referenced_images
# otherwise restrict to only those space-separated registries/tags; if others found, build will fail
# useful for failing build if quay images in an RC, or wrong devspaces image tag (3.2 in 3.1 build)
ARG ALLOWED_REGISTRIES=""
ENV ALLOWED_REGISTRIES=${ALLOWED_REGISTRIES}
ARG ALLOWED_TAGS=""
ENV ALLOWED_TAGS=${ALLOWED_TAGS}

COPY ./build/dockerfiles/content_sets_rhel8.repo /etc/yum.repos.d/
COPY ./build/dockerfiles/rhel.install.sh /tmp
RUN /tmp/rhel.install.sh && rm -f /tmp/rhel.install.sh

COPY ./build/scripts ./versions.json /build/
COPY ./build/scripts/clone_and_zip.sh /build/build/scripts/
COPY ./VERSION /
COPY ./devfiles /build/devfiles
WORKDIR /build/

RUN ./generate_devworkspace_templates.sh
RUN chmod -R g+rwX /build/resources

# validate devfile content
RUN ./check_referenced_images.sh devfiles --registries "${ALLOWED_REGISTRIES}" --tags "${ALLOWED_TAGS}"
RUN ./check_mandatory_fields.sh devfiles

# Cache projects in DS 
COPY ./build/dockerfiles/rhel.cache_projects.sh /tmp/ 
RUN /tmp/rhel.cache_projects.sh /build/ && rm -rf /tmp/rhel.cache_projects.sh /tmp/resources.tgz 

# don't do swaps, or we end up with missing content if built on s390x or ppc64le worker
# RUN ./swap_yamlfiles.sh devfiles
# RUN ./swap_images.sh devfiles
RUN ./index.sh > /build/devfiles/index.json && \
    ./list_referenced_images.sh devfiles > /build/devfiles/external_images.txt && \
    ./list_referenced_images_by_file.sh devfiles > /build/devfiles/external_images_by_devfile.txt && \
    chmod -R g+rwX /build/devfiles

<======= BOOTSTRAP DOCKERFILE =======
======= START BOOTSTRAP BUILD =======>
STEP 1/23: FROM registry.access.redhat.com/ubi8/python-38:1-121 AS builder
STEP 2/23: USER 0
--> 0a289735a18
STEP 3/23: ARG BOOTSTRAP=true
--> eb75b543a2b
STEP 4/23: ENV BOOTSTRAP=${BOOTSTRAP}
--> 369dd454fd1
STEP 5/23: ARG ALLOWED_REGISTRIES=""
--> 62d05c20a5d
STEP 6/23: ENV ALLOWED_REGISTRIES=${ALLOWED_REGISTRIES}
--> 66d1e0748c6
STEP 7/23: ARG ALLOWED_TAGS=""
--> e5a54f8a2d0
STEP 8/23: ENV ALLOWED_TAGS=${ALLOWED_TAGS}
--> 9786b3b4f1f
STEP 9/23: COPY ./build/dockerfiles/content_sets_rhel8.repo /etc/yum.repos.d/
--> 899a4369269
STEP 10/23: COPY ./build/dockerfiles/rhel.install.sh /tmp
--> a7d1eb796ab
STEP 11/23: RUN /tmp/rhel.install.sh && rm -f /tmp/rhel.install.sh

Installed:
  containers-common-2:1-46.module+el8.7.0+17824+66a0202b.ppc64le                
  criu-3.15-3.module+el8.7.0+17824+66a0202b.ppc64le                             
  fuse-common-3.3.0-16.el8.ppc64le                                              
  fuse-overlayfs-1.9-1.module+el8.7.0+17824+66a0202b.ppc64le                    
  fuse3-3.3.0-16.el8.ppc64le                                                    
  fuse3-libs-3.3.0-16.el8.ppc64le                                               
  iptables-libs-1.8.4-23.el8_7.1.ppc64le                                        
  jansson-2.14-1.el8.ppc64le                                                    
  jq-1.6-3.el8.ppc64le                                                          
  kmod-25-19.el8.ppc64le                                                        
  libibverbs-41.0-1.el8.ppc64le                                                 
  libmnl-1.0.4-6.el8.ppc64le                                                    
  libnet-1.1.6-15.el8.ppc64le                                                   
  libnftnl-1.1.5-5.el8.ppc64le                                                  
  libpcap-14:1.9.1-5.el8.ppc64le                                                
  libslirp-4.4.0-1.module+el8.7.0+17824+66a0202b.ppc64le                        
  nftables-1:0.9.3-26.el8.ppc64le                                               
  oniguruma-6.8.2-2.el8.ppc64le                                                 
  protobuf-c-1.3.0-6.el8.ppc64le                                                
  runc-1:1.1.4-1.module+el8.7.0+17824+66a0202b.ppc64le                          
  skopeo-2:1.9.4-0.1.module+el8.7.0+17824+66a0202b.ppc64le                      
  slirp4netns-1.2.0-2.module+el8.7.0+17824+66a0202b.ppc64le                     

Collecting yq
  Downloading https://files.pythonhosted.org/packages/aa/09/31d9eb047a46cf5680c4970f42bee931bd78aab4e3ded448406de4730f96/yq-3.1.1-py3-none-any.whl
Collecting argcomplete
  Downloading https://files.pythonhosted.org/packages/da/5c/dbae943018bcc23c0368c3ad1a921e10db75fe268f2f4a3880e322aaebd1/argcomplete-3.0.4-py3-none-any.whl
Collecting PyYAML>=5.3.1
  Downloading https://files.pythonhosted.org/packages/36/2b/61d51a2c4f25ef062ae3f74576b01638bebad5e045f747ff12643df63844/PyYAML-6.0.tar.gz (124kB)
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Getting requirements to build wheel: started
  Getting requirements to build wheel: finished with status 'done'
    Preparing wheel metadata: started
    Preparing wheel metadata: finished with status 'done'
Collecting xmltodict>=0.11.0
  Downloading https://files.pythonhosted.org/packages/94/db/fd0326e331726f07ff7f40675cd86aa804bfd2e5016c727fa761c934990e/xmltodict-0.13.0-py2.py3-none-any.whl
Collecting toml>=0.10.0
  Downloading https://files.pythonhosted.org/packages/44/6f/7120676b6d73228c96e17f1f794d8ab046fc910d781c8d151120c3f1569e/toml-0.10.2-py2.py3-none-any.whl
Building wheels for collected packages: PyYAML
  Building wheel for PyYAML (PEP 517): started
  Building wheel for PyYAML (PEP 517): finished with status 'done'
  Created wheel for PyYAML: filename=PyYAML-6.0-cp38-cp38-linux_ppc64le.whl size=45334 sha256=da956e0c8ded741b218d300c721443e26e73155b7081f3c6436c3c39a683f28a
  Stored in directory: /tmp/pip-ephem-wheel-cache-prod6bul/wheels/95/84/67/ebeac632c63797cfbeb90128ca41073117721540dad526d213
Successfully built PyYAML
Installing collected packages: PyYAML, xmltodict, toml, argcomplete, yq
Successfully installed PyYAML-6.0 argcomplete-3.0.4 toml-0.10.2 xmltodict-0.13.0 yq-3.1.1
python: Python 3.8.13
yq: yq 3.1.1
jq: jq-1.6
--> 0749b24551e
STEP 12/23: COPY ./build/scripts ./versions.json /build/
--> b0932a6105e
STEP 13/23: COPY ./build/scripts/clone_and_zip.sh /build/build/scripts/
--> 12b6169702f
STEP 14/23: COPY ./VERSION /
--> 510dd063ceb
STEP 15/23: COPY ./devfiles /build/devfiles
--> de9e7184d2d
STEP 16/23: WORKDIR /build/
--> 51dba62aa27
STEP 17/23: RUN ./generate_devworkspace_templates.sh

> core-js@2.6.12 postinstall /build/node_modules/core-js
> node -e "try{require('./postinstall')}catch(e){}"

[96mThank you for using core-js ([94m https://github.com/zloirock/core-js [96m) for polyfilling JavaScript standard library![0m

[96mThe project needs your help! Please consider supporting of core-js on Open Collective or Patreon: [0m
[96m>[94m https://opencollective.com/core-js [0m
[96m>[94m https://www.patreon.com/zloirock [0m

[96mAlso, the author of core-js ([94m https://github.com/zloirock [96m) is looking for a good job -)[0m

+ @eclipse-che/che-devworkspace-generator@0.0.1-c8bd5c0
added 119 packages from 183 contributors and audited 119 packages in 8.722s

5 packages are looking for funding
  run `npm fund` for details

found 2 vulnerabilities (1 moderate, 1 high)
  run `npm audit fix` to fix them, or `npm audit` for details
DevWorkspace che-theia-java-lombok was generated.
DevWorkspace che-code-java-lombok was generated.
DevWorkspace che-code-java-lombok was generated.
DevWorkspace che-idea-java-lombok was generated.
DevWorkspace che-theia-quarkus-quickstart was generated.
DevWorkspace che-code-quarkus-quickstart was generated.
DevWorkspace che-code-quarkus-quickstart was generated.
DevWorkspace che-idea-quarkus-quickstart was generated.
DevWorkspace che-theia-nodejs-mongodb was generated.
DevWorkspace che-code-nodejs-mongodb was generated.
DevWorkspace che-code-nodejs-mongodb was generated.
DevWorkspace che-idea-nodejs-mongodb was generated.
DevWorkspace che-theia-nodejs-web-app was generated.
DevWorkspace che-code-nodejs-web-app was generated.
DevWorkspace che-code-nodejs-web-app was generated.
DevWorkspace che-idea-nodejs-web-app was generated.
DevWorkspace che-theia-python-hello-world was generated.
DevWorkspace che-code-python-hello-world was generated.
DevWorkspace che-code-python-hello-world was generated.
DevWorkspace che-idea-python-hello-world was generated.
DevWorkspace che-theia-cpp was generated.
DevWorkspace che-code-cpp was generated.
DevWorkspace che-code-cpp was generated.
DevWorkspace che-idea-cpp was generated.
DevWorkspace che-theia-dotnet was generated.
DevWorkspace che-code-dotnet was generated.
DevWorkspace che-code-dotnet was generated.
DevWorkspace che-idea-dotnet was generated.
DevWorkspace che-theia-golang was generated.
DevWorkspace che-code-golang was generated.
DevWorkspace che-code-golang was generated.
DevWorkspace che-idea-golang was generated.
DevWorkspace che-theia-php-hello-world was generated.
DevWorkspace che-code-php-hello-world was generated.
DevWorkspace che-code-php-hello-world was generated.
DevWorkspace che-idea-php-hello-world was generated.
--> bb6ad484528
STEP 18/23: RUN chmod -R g+rwX /build/resources
--> 5d06c42c4ba
STEP 19/23: RUN ./check_referenced_images.sh devfiles --registries "${ALLOWED_REGISTRIES}" --tags "${ALLOWED_TAGS}"
 + registry.redhat.io/devspaces/code-rhel8:3.6 PASS - 3.6 allowed
 + registry.redhat.io/devspaces/idea-rhel8:3.6 PASS - 3.6 allowed
 + registry.redhat.io/devspaces/machineexec-rhel8:3.6 PASS - 3.6 allowed
 + registry.redhat.io/devspaces/theia-endpoint-rhel8:3.6 PASS - 3.6 allowed
 + registry.redhat.io/devspaces/theia-rhel8:3.6 PASS - 3.6 allowed
 + registry.redhat.io/devspaces/udi-rhel8:3.6 PASS - 3.6 allowed
 = registry.redhat.io/rhscl/mongodb-36-rhel7:1-50 PASS
--> 03634d48d14
STEP 20/23: RUN ./check_mandatory_fields.sh devfiles
Checking devfile 'devfiles/TP__cpp__c-plus-plus/meta.yaml'
Checking devfile 'devfiles/TP__dotnet__dotnet-web-simple/meta.yaml'
Checking devfile 'devfiles/TP__go__golang-health-check/meta.yaml'
Checking devfile 'devfiles/TP__php__php-hello-world/meta.yaml'
Checking devfile 'devfiles/java11-maven-lombok__lombok-project-sample/meta.yaml'
Checking devfile 'devfiles/java11-maven-quarkus__quarkus-quickstarts/meta.yaml'
Checking devfile 'devfiles/nodejs__nodejs-mongodb-sample/meta.yaml'
Checking devfile 'devfiles/nodejs__web-nodejs-sample/meta.yaml'
Checking devfile 'devfiles/python__python-hello-world/meta.yaml'
--> 4e079bc1a5f
STEP 21/23: COPY ./build/dockerfiles/rhel.cache_projects.sh /tmp/ 
--> bb6819930b1
STEP 22/23: RUN /tmp/rhel.cache_projects.sh /build/ && rm -rf /tmp/rhel.cache_projects.sh /tmp/resources.tgz 
--> 9c463bedeea
STEP 23/23: RUN ./index.sh > /build/devfiles/index.json &&     ./list_referenced_images.sh devfiles > /build/devfiles/external_images.txt &&     ./list_referenced_images_by_file.sh devfiles > /build/devfiles/external_images_by_devfile.txt &&     chmod -R g+rwX /build/devfiles
COMMIT devfileregistry:tmp
--> d64173756a0
Successfully tagged localhost/devfileregistry:tmp
d64173756a0e1de661ba6df967c4168b6d850566ec71a4b9b8f4fcf1ba2b14b9
<======= END BOOTSTRAP BUILD =======
Downloading root-local.tgz
Downloading resources.tgz
DIFF START *****
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.tscHRQZ6eS/bin/activate-global-python-argcomplete /tmp/tmp.FETsdqlzeJ/bin/activate-global-python-argcomplete
--- /tmp/tmp.tscHRQZ6eS/bin/activate-global-python-argcomplete	2023-03-19 08:53:17.000000000 +0000
+++ /tmp/tmp.FETsdqlzeJ/bin/activate-global-python-argcomplete	2023-03-23 21:37:26.538323131 +0000
@@ -1,95 +1,87 @@
 #!/usr/bin/python
 # PYTHON_ARGCOMPLETE_OK
 
-# Copyright 2012-2021, Andrey Kislyuk and argcomplete contributors.
+# Copyright 2012-2023, Andrey Kislyuk and argcomplete contributors.
 # Licensed under the Apache License. See https://github.com/kislyuk/argcomplete for more info.
 
 """
-Activate the generic bash-completion script for the argcomplete module.
+Activate the generic bash-completion script or zsh completion autoload function for the argcomplete module.
 """
 
 import argparse
-import fileinput
 import os
 import shutil
 import sys
 
 import argcomplete
 
-parser = argparse.ArgumentParser(description=__doc__, formatter_class=argparse.RawDescriptionHelpFormatter)
 
-dest_opt = parser.add_argument(
-    "--dest", default="/etc/bash_completion.d", help="Specify the bash completion modules directory to install into"
-)
-parser.add_argument("--user", help="Install into user directory (~/.bash_completion.d/)", action="store_true")
-parser.add_argument(
-    "--no-defaults",
-    dest="use_defaults",
-    action="store_false",
-    default=True,
-    help="When no matches are generated, do not fallback to readline's default completion",
-)
-parser.add_argument(
-    "--complete-arguments",
-    nargs=argparse.REMAINDER,
-    help="arguments to call complete with; use of this option discards default options",
-)
-argcomplete.autocomplete(parser)
-args = parser.parse_args()
+def get_zsh_system_dir():
+    return "/usr/local/share/zsh/site-functions"
 
-if args.user:
-    args.dest = os.path.expanduser("~/.bash_completion.d/")
-    if not os.path.exists(args.dest):
-        try:
-            os.mkdir(args.dest)
-        except Exception as e:
-            parser.error("Path {d} does not exist and could not be created: {e}".format(d=args.dest, e=e))
-elif not os.path.exists(args.dest) and args.dest != "-":
-    if sys.platform == "darwin" and args.dest == dest_opt.default and os.path.exists("/usr/local" + dest_opt.default):
-        args.dest = "/usr/local" + dest_opt.default
-    else:
-        parser.error("Path {d} does not exist".format(d=args.dest))
 
-activator = os.path.join(os.path.dirname(argcomplete.__file__), "bash_completion.d", "python-argcomplete")
+def get_bash_system_dir():
+    if "BASH_COMPLETION_COMPAT_DIR" in os.environ:
+        return os.environ["BASH_COMPLETION_COMPAT_DIR"]
+    elif os.path.exists("/etc/bash_completion.d"):
+        return "/etc/bash_completion.d"
+    else:
+        return "/usr/local/etc/bash_completion.d"
 
-if args.complete_arguments is None:
-    complete_options = "-o default -o bashdefault" if args.use_defaults else "-o bashdefault"
-else:
-    complete_options = " ".join(args.complete_arguments)
-complete_call = "complete{} -D -F _python_argcomplete_global".format(" " + complete_options if complete_options else "")
 
+def install_to_destination(dest):
+    activator = os.path.join(os.path.dirname(argcomplete.__file__), "bash_completion.d", "python-argcomplete")
+    if dest == "-":
+        with open(activator) as fh:
+            sys.stdout.write(fh.read())
+        return
+    destdir = os.path.dirname(dest)
+    if not os.path.exists(destdir):
+        try:
+            os.makedirs(destdir, exist_ok=True)
+        except Exception as e:
+            parser.error(f"path {destdir} does not exist and could not be created: {e}")
+    try:
+        print(f"Installing {activator} to {dest}...", file=sys.stderr)
+        shutil.copy(activator, dest)
+        print("Installed.", file=sys.stderr)
+    except Exception as e:
+        parser.error(
+            f"while installing to {dest}: {e}. Please run this command using sudo, or see --help for more options."
+        )
 
-def replaceCompleteCall(line):
-    if line.startswith("complete") and "_python_argcomplete_global" in line:
-        return complete_call + ("\n" if line.endswith("\n") else "")
-    else:
-        return line
 
+parser = argparse.ArgumentParser(description=__doc__, formatter_class=argparse.RawDescriptionHelpFormatter)
+parser.add_argument("--dest", help='Specify the shell completion modules directory to install into, or "-" for stdout')
+parser.add_argument("--user", help="Install into user directory", action="store_true")
+argcomplete.autocomplete(parser)
+args = parser.parse_args()
+destinations = []
 
-if args.dest == "-":
-    for line in open(activator):
-        sys.stdout.write(replaceCompleteCall(line))
+if args.dest:
+    if args.dest != "-" and not os.path.exists(args.dest):
+        parser.error(f"directory {args.dest} was specified via --dest, but it does not exist")
+    destinations.append(args.dest)
+elif args.user:
+    print(
+        'WARNING: zsh has no standard user completions directory. To use global completion with zsh, please run this '
+        'command using sudo, or run "echo $fpath" and install the completion module into one of the listed directories'
+        ' using "activate-global-python-argcomplete --dest=- > completions-dir/_python-argcomplete".',
+        file=sys.stderr,
+    )
+    user_destination = os.path.expanduser("~/.bash_completion")
+    if os.path.exists(user_destination):
+        parser.error(
+            f'Bash user completion configuration file {user_destination} already exists. Please remove it and try '
+            f'again, or use "activate-global-python-argcomplete --dest=- >> {user_destination}".'
+        )
+    destinations.append(os.path.expanduser("~/.bash_completion"))
 else:
-    dest = os.path.join(args.dest, "python-argcomplete")
+    destinations.append(f"{get_zsh_system_dir()}/_python-argcomplete")
+    destinations.append(f"{get_bash_system_dir()}/python-argcomplete")
 
-    sys.stdout.write("Installing bash completion script " + dest)
-    if not args.use_defaults:
-        sys.stdout.write(" without -o default")
-    elif args.complete_arguments:
-        sys.stdout.write(" with options: " + complete_options)
-    sys.stdout.write("\n")
+for destination in destinations:
+    install_to_destination(destination)
 
-    try:
-        shutil.copy(activator, dest)
-        if args.complete_arguments or not args.use_defaults:
-            for line in fileinput.input(dest, inplace=True):
-                # fileinput with inplace=True redirects stdout to the edited file
-                sys.stdout.write(replaceCompleteCall(line))
-    except Exception as e:
-        err = str(e)
-        if args.dest == dest_opt.default:
-            err += (
-                "\nPlease try --user to install into a user directory, "
-                "or --dest to specify the bash completion modules directory"
-            )
-        parser.error(err)
+if args.dest is None:
+    print("Please restart your shell or source the installed file to activate it.", file=sys.stderr)
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.tscHRQZ6eS/bin/python-argcomplete-check-easy-install-script /tmp/tmp.FETsdqlzeJ/bin/python-argcomplete-check-easy-install-script
--- /tmp/tmp.tscHRQZ6eS/bin/python-argcomplete-check-easy-install-script	2023-03-19 08:53:17.000000000 +0000
+++ /tmp/tmp.FETsdqlzeJ/bin/python-argcomplete-check-easy-install-script	2023-03-23 21:37:26.538323131 +0000
@@ -1,6 +1,6 @@
 #!/usr/bin/python
 
-# Copyright 2012-2021, Andrey Kislyuk and argcomplete contributors.
+# Copyright 2012-2023, Andrey Kislyuk and argcomplete contributors.
 # Licensed under the Apache License. See https://github.com/kislyuk/argcomplete for more info.
 
 """
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.tscHRQZ6eS/bin/register-python-argcomplete /tmp/tmp.FETsdqlzeJ/bin/register-python-argcomplete
--- /tmp/tmp.tscHRQZ6eS/bin/register-python-argcomplete	2023-03-19 08:53:17.000000000 +0000
+++ /tmp/tmp.FETsdqlzeJ/bin/register-python-argcomplete	2023-03-23 21:37:26.538323131 +0000
@@ -1,7 +1,7 @@
 #!/usr/bin/python
 # PYTHON_ARGCOMPLETE_OK
 
-# Copyright 2012-2021, Andrey Kislyuk and argcomplete contributors.
+# Copyright 2012-2023, Andrey Kislyuk and argcomplete contributors.
 # Licensed under the Apache License. See https://github.com/kislyuk/argcomplete for more info.
 
 """
@@ -43,8 +43,11 @@
     help="arguments to call complete with; use of this option discards default options",
 )
 parser.add_argument(
-    "-s", "--shell", choices=("bash", "tcsh", "fish", "powershell"), default="bash",
-    help="output code for the specified shell"
+    "-s",
+    "--shell",
+    choices=("bash", "zsh", "tcsh", "fish", "powershell"),
+    default="bash",
+    help="output code for the specified shell",
 )
 parser.add_argument(
     "-e", "--external-argcomplete-script", help="external argcomplete script for auto completion of the executable"
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/argcomplete/bash_completion.d/python-argcomplete /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete/bash_completion.d/python-argcomplete
--- /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/argcomplete/bash_completion.d/python-argcomplete	2023-03-19 08:53:17.000000000 +0000
+++ /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete/bash_completion.d/python-argcomplete	2023-03-23 21:37:26.538323131 +0000
@@ -1,4 +1,6 @@
-# Copyright 2012-2021, Andrey Kislyuk and argcomplete contributors.
+#compdef -P *
+
+# Copyright 2012-2023, Andrey Kislyuk and argcomplete contributors.
 # Licensed under the Apache License. See https://github.com/kislyuk/argcomplete for more info.
 
 # Copy of __expand_tilde_by_ref from bash-completion
@@ -41,7 +43,11 @@
 # argcomplete completion protocol. By default, scan the first kilobyte;
 # if $3 is set to -n, scan until the first line break up to a kilobyte.
 __python_argcomplete_scan_head() {
-    read -s -r ${3:--N} 1024 < "$1"
+    if [[ -n "${ZSH_VERSION-}" ]]; then
+        read -s -r -k 1024 -u 0 < "$1"
+    else
+        read -s -r ${3:--N} 1024 < "$1"
+    fi
     [[ "$REPLY" =~ ${2:-PYTHON_ARGCOMPLETE_OK} ]]
 }
 
@@ -49,9 +55,24 @@
     __python_argcomplete_scan_head "$@" 2>/dev/null
 }
 
+__python_argcomplete_which() {
+    if [[ -n "${ZSH_VERSION-}" ]]; then
+        whence -p "$@"
+    else
+        type -P "$@"
+    fi
+}
+
 _python_argcomplete_global() {
-    local executable=$1
-    __python_argcomplete_expand_tilde_by_ref executable
+    if [[ -z "${ZSH_VERSION-}" ]]; then
+        local executable=$1
+        __python_argcomplete_expand_tilde_by_ref executable
+    else
+        if [[ "$service" != "-default-" ]]; then
+            return
+        fi
+        local executable=${words[1]}
+    fi
 
     local ARGCOMPLETE=0
     if [[ "$executable" == python* ]] || [[ "$executable" == pypy* ]]; then
@@ -66,9 +87,9 @@
         else
             return
         fi
-    elif type -P "$executable" >/dev/null 2>&1; then
-        local SCRIPT_NAME=$(type -P "$executable")
-        if (type -t pyenv && [[ "$SCRIPT_NAME" = $(pyenv root)/shims/* ]]) >/dev/null 2>&1; then
+    elif __python_argcomplete_which "$executable" >/dev/null 2>&1; then
+        local SCRIPT_NAME=$(__python_argcomplete_which "$executable")
+        if (__python_argcomplete_which pyenv && [[ "$SCRIPT_NAME" = $(pyenv root)/shims/* ]]) >/dev/null 2>&1; then
             local SCRIPT_NAME=$(pyenv which "$executable")
         fi
         if __python_argcomplete_scan_head_noerr "$SCRIPT_NAME"; then
@@ -76,7 +97,7 @@
         elif __python_argcomplete_scan_head_noerr "$SCRIPT_NAME" '^#!(.*)$' -n && [[ "${BASH_REMATCH[1]}" =~ ^.*(python|pypy)[0-9\.]*$ ]]; then
             local interpreter="$BASH_REMATCH"
             if (__python_argcomplete_scan_head_noerr "$SCRIPT_NAME" "(PBR Generated)|(EASY-INSTALL-(SCRIPT|ENTRY-SCRIPT|DEV-SCRIPT))" \
-                && "$interpreter" "$(type -P python-argcomplete-check-easy-install-script)" "$SCRIPT_NAME") >/dev/null 2>&1; then
+                && "$interpreter" "$(__python_argcomplete_which python-argcomplete-check-easy-install-script)" "$SCRIPT_NAME") >/dev/null 2>&1; then
                 local ARGCOMPLETE=1
             elif __python_argcomplete_run "$interpreter" -m argcomplete._check_console_script "$SCRIPT_NAME"; then
                 local ARGCOMPLETE=1
@@ -85,22 +106,39 @@
     fi
 
     if [[ $ARGCOMPLETE != 0 ]]; then
-        local IFS=$(echo -e '\v')
-        COMPREPLY=( $(_ARGCOMPLETE_IFS="$IFS" \
-            COMP_LINE="$COMP_LINE" \
-            COMP_POINT="$COMP_POINT" \
-            COMP_TYPE="$COMP_TYPE" \
-            _ARGCOMPLETE_COMP_WORDBREAKS="$COMP_WORDBREAKS" \
-            _ARGCOMPLETE=$ARGCOMPLETE \
-            _ARGCOMPLETE_SUPPRESS_SPACE=1 \
-            __python_argcomplete_run "$executable" "${COMP_WORDS[@]:1:ARGCOMPLETE-1}") )
-        if [[ $? != 0 ]]; then
-            unset COMPREPLY
-        elif [[ "${COMPREPLY-}" =~ [=/:]$ ]]; then
-            compopt -o nospace
+        local IFS=$'\013'
+        if [[ -n "${ZSH_VERSION-}" ]]; then
+            local completions
+            completions=($(IFS="$IFS" \
+                COMP_LINE="$BUFFER" \
+                COMP_POINT="$CURSOR" \
+                _ARGCOMPLETE=$ARGCOMPLETE \
+                _ARGCOMPLETE_SHELL="zsh" \
+                _ARGCOMPLETE_SUPPRESS_SPACE=1 \
+                __python_argcomplete_run "$executable" "${words[@]:1:${ARGCOMPLETE}-1}"))
+            _describe "$executable" completions -o nosort
+        else
+            COMPREPLY=($(IFS="$IFS" \
+                COMP_LINE="$COMP_LINE" \
+                COMP_POINT="$COMP_POINT" \
+                COMP_TYPE="$COMP_TYPE" \
+                _ARGCOMPLETE_COMP_WORDBREAKS="$COMP_WORDBREAKS" \
+                _ARGCOMPLETE=$ARGCOMPLETE \
+                _ARGCOMPLETE_SHELL="bash" \
+                _ARGCOMPLETE_SUPPRESS_SPACE=1 \
+                __python_argcomplete_run "$executable" "${COMP_WORDS[@]:1:${ARGCOMPLETE}-1}"))
+            if [[ $? != 0 ]]; then
+                unset COMPREPLY
+            elif [[ "${COMPREPLY-}" =~ [=/:]$ ]]; then
+                compopt -o nospace
+            fi
         fi
-    else
+    elif [[ -z "${ZSH_VERSION-}" ]]; then
         type -t _completion_loader | grep -q 'function' && _completion_loader "$@"
     fi
 }
-complete -o default -o bashdefault -D -F _python_argcomplete_global
+if [[ -z "${ZSH_VERSION-}" ]]; then
+    complete -o default -o bashdefault -D -F _python_argcomplete_global
+else
+    compdef _python_argcomplete_global -P '*'
+fi
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/argcomplete/completers.py /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete/completers.py
--- /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/argcomplete/completers.py	2023-03-19 08:53:17.000000000 +0000
+++ /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete/completers.py	2023-03-23 21:37:26.538323131 +0000
@@ -1,4 +1,4 @@
-# Copyright 2012-2021, Andrey Kislyuk and argcomplete contributors.
+# Copyright 2012-2023, Andrey Kislyuk and argcomplete contributors.
 # Licensed under the Apache License. See https://github.com/kislyuk/argcomplete for more info.
 
 import os
Only in /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete: exceptions.py
Only in /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete: finders.py
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/argcomplete/__init__.py /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete/__init__.py
--- /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/argcomplete/__init__.py	2023-03-19 08:53:17.000000000 +0000
+++ /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete/__init__.py	2023-03-23 21:37:26.538323131 +0000
@@ -1,722 +1,13 @@
-# Copyright 2012-2021, Andrey Kislyuk and argcomplete contributors.
+# Copyright 2012-2023, Andrey Kislyuk and argcomplete contributors.
 # Licensed under the Apache License. See https://github.com/kislyuk/argcomplete for more info.
 
-import argparse
-import contextlib
-import os
-import sys
-from typing import Dict, List, Tuple
-
 from . import completers
-from . import my_shlex as shlex
-from .completers import FilesCompleter, SuppressCompleter
-from .my_argparse import IntrospectiveArgumentParser, action_is_greedy, action_is_open, action_is_satisfied
-from .shell_integration import shellcode  # noqa
-
-_DEBUG = "_ARC_DEBUG" in os.environ
-
-debug_stream = sys.stderr
-
-
-def debug(*args):
-    if _DEBUG:
-        print(file=debug_stream, *args)
-
-
-BASH_FILE_COMPLETION_FALLBACK = 79
-BASH_DIR_COMPLETION_FALLBACK = 80
-
-safe_actions = (
-    argparse._StoreAction,
-    argparse._StoreConstAction,
-    argparse._StoreTrueAction,
-    argparse._StoreFalseAction,
-    argparse._AppendAction,
-    argparse._AppendConstAction,
-    argparse._CountAction,
-)
-
-
-@contextlib.contextmanager
-def mute_stdout():
-    stdout = sys.stdout
-    sys.stdout = open(os.devnull, "w")
-    try:
-        yield
-    finally:
-        sys.stdout = stdout
-
-
-@contextlib.contextmanager
-def mute_stderr():
-    stderr = sys.stderr
-    sys.stderr = open(os.devnull, "w")
-    try:
-        yield
-    finally:
-        sys.stderr.close()
-        sys.stderr = stderr
-
-
-class ArgcompleteException(Exception):
-    pass
-
-
-def split_line(line, point=None):
-    if point is None:
-        point = len(line)
-    line = line[:point]
-    lexer = shlex.shlex(line, posix=True)
-    lexer.whitespace_split = True
-    lexer.wordbreaks = os.environ.get("_ARGCOMPLETE_COMP_WORDBREAKS", "")
-    words = []
-
-    def split_word(word):
-        # TODO: make this less ugly
-        point_in_word = len(word) + point - lexer.instream.tell()
-        if isinstance(lexer.state, (str, bytes)) and lexer.state in lexer.whitespace:
-            point_in_word += 1
-        if point_in_word > len(word):
-            debug("In trailing whitespace")
-            words.append(word)
-            word = ""
-        prefix, suffix = word[:point_in_word], word[point_in_word:]
-        prequote = ""
-        # posix
-        if lexer.state is not None and lexer.state in lexer.quotes:
-            prequote = lexer.state
-        # non-posix
-        # if len(prefix) > 0 and prefix[0] in lexer.quotes:
-        #    prequote, prefix = prefix[0], prefix[1:]
-
-        return prequote, prefix, suffix, words, lexer.last_wordbreak_pos
-
-    while True:
-        try:
-            word = lexer.get_token()
-            if word == lexer.eof:
-                # TODO: check if this is ever unsafe
-                # raise ArgcompleteException("Unexpected end of input")
-                return "", "", "", words, None
-            if lexer.instream.tell() >= point:
-                debug("word", word, "split, lexer state: '{s}'".format(s=lexer.state))
-                return split_word(word)
-            words.append(word)
-        except ValueError:
-            debug("word", lexer.token, "split (lexer stopped, state: '{s}')".format(s=lexer.state))
-            if lexer.instream.tell() >= point:
-                return split_word(lexer.token)
-            else:
-                msg = (
-                    "Unexpected internal state. "
-                    "Please report this bug at https://github.com/kislyuk/argcomplete/issues."
-                )
-                raise ArgcompleteException(msg)
-
-
-def default_validator(completion, prefix):
-    return completion.startswith(prefix)
-
-
-class CompletionFinder(object):
-    """
-    Inherit from this class if you wish to override any of the stages below. Otherwise, use
-    ``argcomplete.autocomplete()`` directly (it's a convenience instance of this class). It has the same signature as
-    :meth:`CompletionFinder.__call__()`.
-    """
-
-    def __init__(
-        self,
-        argument_parser=None,
-        always_complete_options=True,
-        exclude=None,
-        validator=None,
-        print_suppressed=False,
-        default_completer=FilesCompleter(),
-        append_space=None,
-    ):
-        self._parser = argument_parser
-        self.always_complete_options = always_complete_options
-        self.exclude = exclude
-        if validator is None:
-            validator = default_validator
-        self.validator = validator
-        self.print_suppressed = print_suppressed
-        self.completing = False
-        self._display_completions: Dict[Tuple[str], str] = {}
-        self.default_completer = default_completer
-        if append_space is None:
-            append_space = os.environ.get("_ARGCOMPLETE_SUPPRESS_SPACE") != "1"
-        self.append_space = append_space
-
-    def __call__(
-        self,
-        argument_parser,
-        always_complete_options=True,
-        exit_method=os._exit,
-        output_stream=None,
-        exclude=None,
-        validator=None,
-        print_suppressed=False,
-        append_space=None,
-        default_completer=FilesCompleter(),
-    ):
-        """
-        :param argument_parser: The argument parser to autocomplete on
-        :type argument_parser: :class:`argparse.ArgumentParser`
-        :param always_complete_options:
-            Controls the autocompletion of option strings if an option string opening character (normally ``-``) has not
-            been entered. If ``True`` (default), both short (``-x``) and long (``--x``) option strings will be
-            suggested. If ``False``, no option strings will be suggested. If ``long``, long options and short options
-            with no long variant will be suggested. If ``short``, short options and long options with no short variant
-            will be suggested.
-        :type always_complete_options: boolean or string
-        :param exit_method:
-            Method used to stop the program after printing completions. Defaults to :meth:`os._exit`. If you want to
-            perform a normal exit that calls exit handlers, use :meth:`sys.exit`.
-        :type exit_method: callable
-        :param exclude: List of strings representing options to be omitted from autocompletion
-        :type exclude: iterable
-        :param validator:
-            Function to filter all completions through before returning (called with two string arguments, completion
-            and prefix; return value is evaluated as a boolean)
-        :type validator: callable
-        :param print_suppressed:
-            Whether or not to autocomplete options that have the ``help=argparse.SUPPRESS`` keyword argument set.
-        :type print_suppressed: boolean
-        :param append_space:
-            Whether to append a space to unique matches. The default is ``True``.
-        :type append_space: boolean
-
-        .. note::
-            If you are not subclassing CompletionFinder to override its behaviors,
-            use ``argcomplete.autocomplete()`` directly. It has the same signature as this method.
-
-        Produces tab completions for ``argument_parser``. See module docs for more info.
-
-        Argcomplete only executes actions if their class is known not to have side effects. Custom action classes can be
-        added to argcomplete.safe_actions, if their values are wanted in the ``parsed_args`` completer argument, or
-        their execution is otherwise desirable.
-        """
-        self.__init__(  # type: ignore
-            argument_parser,
-            always_complete_options=always_complete_options,
-            exclude=exclude,
-            validator=validator,
-            print_suppressed=print_suppressed,
-            append_space=append_space,
-            default_completer=default_completer,
-        )
-
-        if "_ARGCOMPLETE" not in os.environ:
-            # not an argument completion invocation
-            return
-
-        global debug_stream
-        try:
-            debug_stream = os.fdopen(9, "w")
-        except Exception:
-            debug_stream = sys.stderr
-        debug()
-
-        if output_stream is None:
-            filename = os.environ.get("_ARGCOMPLETE_STDOUT_FILENAME")
-            if filename is not None:
-                debug("Using output file {}".format(filename))
-                output_stream = open(filename, "w")
-
-        if output_stream is None:
-            try:
-                output_stream = os.fdopen(8, "w")
-            except Exception:
-                debug("Unable to open fd 8 for writing, quitting")
-                exit_method(1)
-
-        # print("", stream=debug_stream)
-        # for v in "COMP_CWORD COMP_LINE COMP_POINT COMP_TYPE COMP_KEY _ARGCOMPLETE_COMP_WORDBREAKS COMP_WORDS".split():
-        #     print(v, os.environ[v], stream=debug_stream)
-
-        ifs = os.environ.get("_ARGCOMPLETE_IFS", "\013")
-        if len(ifs) != 1:
-            debug("Invalid value for IFS, quitting [{v}]".format(v=ifs))
-            exit_method(1)
-
-        dfs = os.environ.get("_ARGCOMPLETE_DFS")
-        if dfs and len(dfs) != 1:
-            debug("Invalid value for DFS, quitting [{v}]".format(v=dfs))
-            exit_method(1)
-
-        comp_line = os.environ["COMP_LINE"]
-        comp_point = int(os.environ["COMP_POINT"])
-
-        cword_prequote, cword_prefix, cword_suffix, comp_words, last_wordbreak_pos = split_line(comp_line, comp_point)
-
-        # _ARGCOMPLETE is set by the shell script to tell us where comp_words
-        # should start, based on what we're completing.
-        # 1: <script> [args]
-        # 2: python <script> [args]
-        # 3: python -m <module> [args]
-        start = int(os.environ["_ARGCOMPLETE"]) - 1
-        comp_words = comp_words[start:]
-
-        if cword_prefix and cword_prefix[0] in self._parser.prefix_chars and "=" in cword_prefix:
-            # Special case for when the current word is "--optional=PARTIAL_VALUE". Give the optional to the parser.
-            comp_words.append(cword_prefix.split("=", 1)[0])
-
-        debug(
-            "\nLINE: {!r}".format(comp_line),
-            "\nPOINT: {!r}".format(comp_point),
-            "\nPREQUOTE: {!r}".format(cword_prequote),
-            "\nPREFIX: {!r}".format(cword_prefix),
-            "\nSUFFIX: {!r}".format(cword_suffix),
-            "\nWORDS:",
-            comp_words,
-        )
-
-        completions = self._get_completions(comp_words, cword_prefix, cword_prequote, last_wordbreak_pos)
-
-        if dfs:
-            display_completions = {
-                key_part: value.replace(ifs, " ") if value else ""
-                for key, value in self._display_completions.items()
-                for key_part in key
-            }
-            completions = [dfs.join((key, display_completions.get(key) or "")) for key in completions]
-
-        debug("\nReturning completions:", completions)
-        output_stream.write(ifs.join(completions))
-        output_stream.flush()
-        debug_stream.flush()
-        exit_method(0)
-
-    def _get_completions(self, comp_words, cword_prefix, cword_prequote, last_wordbreak_pos):
-        active_parsers = self._patch_argument_parser()
-
-        parsed_args = argparse.Namespace()
-        self.completing = True
-
-        try:
-            debug("invoking parser with", comp_words[1:])
-            with mute_stderr():
-                a = self._parser.parse_known_args(comp_words[1:], namespace=parsed_args)
-            debug("parsed args:", a)
-        except BaseException as e:
-            debug("\nexception", type(e), str(e), "while parsing args")
-
-        self.completing = False
-
-        if "--" in comp_words:
-            self.always_complete_options = False
-
-        completions = self.collect_completions(active_parsers, parsed_args, cword_prefix, debug)
-        completions = self.filter_completions(completions)
-        completions = self.quote_completions(completions, cword_prequote, last_wordbreak_pos)
-        return completions
-
-    def _patch_argument_parser(self):
-        """
-        Since argparse doesn't support much introspection, we monkey-patch it to replace the parse_known_args method and
-        all actions with hooks that tell us which action was last taken or about to be taken, and let us have the parser
-        figure out which subparsers need to be activated (then recursively monkey-patch those).
-        We save all active ArgumentParsers to extract all their possible option names later.
-        """
-        self.active_parsers: List[argparse.ArgumentParser] = []
-        self.visited_positionals: List[argparse.Action] = []
-
-        completer = self
-
-        def patch(parser):
-            completer.visited_positionals.append(parser)
-            completer.active_parsers.append(parser)
-
-            if isinstance(parser, IntrospectiveArgumentParser):
-                return
-
-            classname = "MonkeyPatchedIntrospectiveArgumentParser"
-
-            parser.__class__ = type(classname, (IntrospectiveArgumentParser, parser.__class__), {})
-
-            for action in parser._actions:
-                if hasattr(action, "_orig_class"):
-                    continue
-
-                # TODO: accomplish this with super
-                class IntrospectAction(action.__class__):  # type: ignore
-                    def __call__(self, parser, namespace, values, option_string=None):
-                        debug("Action stub called on", self)
-                        debug("\targs:", parser, namespace, values, option_string)
-                        debug("\torig class:", self._orig_class)
-                        debug("\torig callable:", self._orig_callable)
-
-                        if not completer.completing:
-                            self._orig_callable(parser, namespace, values, option_string=option_string)
-                        elif issubclass(self._orig_class, argparse._SubParsersAction):
-                            debug("orig class is a subparsers action: patching and running it")
-                            patch(self._name_parser_map[values[0]])
-                            self._orig_callable(parser, namespace, values, option_string=option_string)
-                        elif self._orig_class in safe_actions:
-                            if not self.option_strings:
-                                completer.visited_positionals.append(self)
-
-                            self._orig_callable(parser, namespace, values, option_string=option_string)
-
-                action._orig_class = action.__class__
-                action._orig_callable = action.__call__
-                action.__class__ = IntrospectAction
-
-        patch(self._parser)
-
-        debug("Active parsers:", self.active_parsers)
-        debug("Visited positionals:", self.visited_positionals)
-
-        return self.active_parsers
-
-    def _get_subparser_completions(self, parser, cword_prefix):
-        def filter_aliases(aliases, prefix):
-            return tuple(x for x in aliases if x.startswith(prefix))
-
-        aliases_by_parser: Dict[argparse.ArgumentParser, List[str]] = {}
-        for key in parser.choices.keys():
-            p = parser.choices[key]
-            aliases_by_parser.setdefault(p, []).append(key)
-
-        for action in parser._get_subactions():
-            subcmd_with_aliases = filter_aliases(aliases_by_parser[parser.choices[action.dest]], cword_prefix)
-            if subcmd_with_aliases:
-                self._display_completions[subcmd_with_aliases] = action.help
-
-        completions = [subcmd for subcmd in parser.choices.keys() if subcmd.startswith(cword_prefix)]
-        return completions
-
-    def _include_options(self, action, cword_prefix):
-        if len(cword_prefix) > 0 or self.always_complete_options is True:
-            return [opt for opt in action.option_strings if opt.startswith(cword_prefix)]
-        long_opts = [opt for opt in action.option_strings if len(opt) > 2]
-        short_opts = [opt for opt in action.option_strings if len(opt) <= 2]
-        if self.always_complete_options == "long":
-            return long_opts if long_opts else short_opts
-        elif self.always_complete_options == "short":
-            return short_opts if short_opts else long_opts
-        return []
-
-    def _get_option_completions(self, parser, cword_prefix):
-        for action in parser._actions:
-            if action.option_strings:
-                active_option_strings = tuple(str(x) for x in action.option_strings if x.startswith(cword_prefix))
-                self._display_completions[active_option_strings] = action.help  # type: ignore
-
-        option_completions = []
-        for action in parser._actions:
-            if not self.print_suppressed:
-                completer = getattr(action, "completer", None)
-                if isinstance(completer, SuppressCompleter) and completer.suppress():
-                    continue
-                if action.help == argparse.SUPPRESS:
-                    continue
-            if not self._action_allowed(action, parser):
-                continue
-            if not isinstance(action, argparse._SubParsersAction):
-                option_completions += self._include_options(action, cword_prefix)
-        return option_completions
-
-    @staticmethod
-    def _action_allowed(action, parser):
-        # Logic adapted from take_action in ArgumentParser._parse_known_args
-        # (members are saved by my_argparse.IntrospectiveArgumentParser)
-        for conflict_action in parser._action_conflicts.get(action, []):
-            if conflict_action in parser._seen_non_default_actions:
-                return False
-        return True
-
-    def _complete_active_option(self, parser, next_positional, cword_prefix, parsed_args, completions):
-        debug("Active actions (L={l}): {a}".format(l=len(parser.active_actions), a=parser.active_actions))
-
-        isoptional = cword_prefix and cword_prefix[0] in parser.prefix_chars
-        optional_prefix = ""
-        greedy_actions = [x for x in parser.active_actions if action_is_greedy(x, isoptional)]
-        if greedy_actions:
-            assert len(greedy_actions) == 1, "expect at most 1 greedy action"
-            # This means the action will fail to parse if the word under the cursor is not given
-            # to it, so give it exclusive control over completions (flush previous completions)
-            debug("Resetting completions because", greedy_actions[0], "must consume the next argument")
-            self._display_completions = {}
-            completions = []
-        elif isoptional:
-            if "=" in cword_prefix:
-                # Special case for when the current word is "--optional=PARTIAL_VALUE".
-                # The completer runs on PARTIAL_VALUE. The prefix is added back to the completions
-                # (and chopped back off later in quote_completions() by the COMP_WORDBREAKS logic).
-                optional_prefix, _, cword_prefix = cword_prefix.partition("=")
-            else:
-                # Only run completers if current word does not start with - (is not an optional)
-                return completions
-
-        complete_remaining_positionals = False
-        # Use the single greedy action (if there is one) or all active actions.
-        for active_action in greedy_actions or parser.active_actions:
-            if not active_action.option_strings:  # action is a positional
-                if action_is_open(active_action):
-                    # Any positional arguments after this may slide down into this action
-                    # if more arguments are added (since the user may not be done yet),
-                    # so it is extremely difficult to tell which completers to run.
-                    # Running all remaining completers will probably show more than the user wants
-                    # but it also guarantees we won't miss anything.
-                    complete_remaining_positionals = True
-                if not complete_remaining_positionals:
-                    if action_is_satisfied(active_action) and not action_is_open(active_action):
-                        debug("Skipping", active_action)
-                        continue
-
-            debug("Activating completion for", active_action, active_action._orig_class)
-            # completer = getattr(active_action, "completer", DefaultCompleter())
-            completer = getattr(active_action, "completer", None)
-
-            if completer is None:
-                if active_action.choices is not None and not isinstance(active_action, argparse._SubParsersAction):
-                    completer = completers.ChoicesCompleter(active_action.choices)
-                elif not isinstance(active_action, argparse._SubParsersAction):
-                    completer = self.default_completer
-
-            if completer:
-                if isinstance(completer, SuppressCompleter) and completer.suppress():
-                    continue
-
-                if callable(completer):
-                    completions_from_callable = [
-                        c
-                        for c in completer(
-                            prefix=cword_prefix, action=active_action, parser=parser, parsed_args=parsed_args
-                        )
-                        if self.validator(c, cword_prefix)
-                    ]
-
-                    if completions_from_callable:
-                        completions += completions_from_callable
-                        for x in completions_from_callable:
-                            if isinstance(completer, completers.ChoicesCompleter):
-                                self._display_completions[(x,)] = active_action.help
-                            else:
-                                self._display_completions[(x,)] = ""
-                else:
-                    debug("Completer is not callable, trying the readline completer protocol instead")
-                    for i in range(9999):
-                        next_completion = completer.complete(cword_prefix, i)  # type: ignore
-                        if next_completion is None:
-                            break
-                        if self.validator(next_completion, cword_prefix):
-                            self._display_completions.update({(next_completion,): ""})  # type: ignore
-                            completions.append(next_completion)
-                if optional_prefix:
-                    completions = [optional_prefix + "=" + completion for completion in completions]
-                debug("Completions:", completions)
-        return completions
-
-    def collect_completions(self, active_parsers, parsed_args, cword_prefix, debug):
-        """
-        Visits the active parsers and their actions, executes their completers or introspects them to collect their
-        option strings. Returns the resulting completions as a list of strings.
-
-        This method is exposed for overriding in subclasses; there is no need to use it directly.
-        """
-        completions = []
-
-        debug("all active parsers:", active_parsers)
-        active_parser = active_parsers[-1]
-        debug("active_parser:", active_parser)
-        if self.always_complete_options or (len(cword_prefix) > 0 and cword_prefix[0] in active_parser.prefix_chars):
-            completions += self._get_option_completions(active_parser, cword_prefix)
-        debug("optional options:", completions)
-
-        next_positional = self._get_next_positional()
-        debug("next_positional:", next_positional)
-
-        if isinstance(next_positional, argparse._SubParsersAction):
-            completions += self._get_subparser_completions(next_positional, cword_prefix)
-
-        completions = self._complete_active_option(
-            active_parser, next_positional, cword_prefix, parsed_args, completions
-        )
-        debug("active options:", completions)
-        debug("display completions:", self._display_completions)
-
-        return completions
-
-    def _get_next_positional(self):
-        """
-        Get the next positional action if it exists.
-        """
-        active_parser = self.active_parsers[-1]
-        last_positional = self.visited_positionals[-1]
-
-        all_positionals = active_parser._get_positional_actions()
-        if not all_positionals:
-            return None
-
-        if active_parser == last_positional:
-            return all_positionals[0]
-
-        i = 0
-        for i in range(len(all_positionals)):
-            if all_positionals[i] == last_positional:
-                break
-
-        if i + 1 < len(all_positionals):
-            return all_positionals[i + 1]
-
-        return None
-
-    def filter_completions(self, completions):
-        """
-        De-duplicates completions and excludes those specified by ``exclude``.
-        Returns the filtered completions as a list.
-
-        This method is exposed for overriding in subclasses; there is no need to use it directly.
-        """
-        filtered_completions = []
-        for completion in completions:
-            if self.exclude is not None:
-                if completion in self.exclude:
-                    continue
-            if completion not in filtered_completions:
-                filtered_completions.append(completion)
-        return filtered_completions
-
-    def quote_completions(self, completions, cword_prequote, last_wordbreak_pos):
-        """
-        If the word under the cursor started with a quote (as indicated by a nonempty ``cword_prequote``), escapes
-        occurrences of that quote character in the completions, and adds the quote to the beginning of each completion.
-        Otherwise, escapes all characters that bash splits words on (``COMP_WORDBREAKS``), and removes portions of
-        completions before the first colon if (``COMP_WORDBREAKS``) contains a colon.
-
-        If there is only one completion, and it doesn't end with a **continuation character** (``/``, ``:``, or ``=``),
-        adds a space after the completion.
-
-        This method is exposed for overriding in subclasses; there is no need to use it directly.
-        """
-        special_chars = "\\"
-        # If the word under the cursor was quoted, escape the quote char.
-        # Otherwise, escape all special characters and specially handle all COMP_WORDBREAKS chars.
-        if cword_prequote == "":
-            # Bash mangles completions which contain characters in COMP_WORDBREAKS.
-            # This workaround has the same effect as __ltrim_colon_completions in bash_completion
-            # (extended to characters other than the colon).
-            if last_wordbreak_pos:
-                completions = [c[last_wordbreak_pos + 1 :] for c in completions]
-            special_chars += "();<>|&!`$* \t\n\"'"
-        elif cword_prequote == '"':
-            special_chars += '"`$!'
-
-        if os.environ.get("_ARGCOMPLETE_SHELL") in ("tcsh", "fish"):
-            # tcsh and fish escapes special characters itself.
-            special_chars = ""
-        elif cword_prequote == "'":
-            # Nothing can be escaped in single quotes, so we need to close
-            # the string, escape the single quote, then open a new string.
-            special_chars = ""
-            completions = [c.replace("'", r"'\''") for c in completions]
-
-        for char in special_chars:
-            completions = [c.replace(char, "\\" + char) for c in completions]
-
-        if self.append_space:
-            # Similar functionality in bash was previously turned off by supplying the "-o nospace" option to complete.
-            # Now it is conditionally disabled using "compopt -o nospace" if the match ends in a continuation character.
-            # This code is retained for environments where this isn't done natively.
-            continuation_chars = "=/:"
-            if len(completions) == 1 and completions[0][-1] not in continuation_chars:
-                if cword_prequote == "":
-                    completions[0] += " "
-
-        return completions
-
-    def rl_complete(self, text, state):
-        """
-        Alternate entry point for using the argcomplete completer in a readline-based REPL. See also
-        `rlcompleter <https://docs.python.org/3/library/rlcompleter.html#completer-objects>`_.
-        Usage:
-
-        .. code-block:: python
-
-            import argcomplete, argparse, readline
-            parser = argparse.ArgumentParser()
-            ...
-            completer = argcomplete.CompletionFinder(parser)
-            readline.set_completer_delims("")
-            readline.set_completer(completer.rl_complete)
-            readline.parse_and_bind("tab: complete")
-            result = input("prompt> ")
-        """
-        if state == 0:
-            cword_prequote, cword_prefix, cword_suffix, comp_words, first_colon_pos = split_line(text)
-            comp_words.insert(0, sys.argv[0])
-            matches = self._get_completions(comp_words, cword_prefix, cword_prequote, first_colon_pos)
-            self._rl_matches = [text + match[len(cword_prefix) :] for match in matches]
-
-        if state < len(self._rl_matches):
-            return self._rl_matches[state]
-        else:
-            return None
-
-    def get_display_completions(self):
-        """
-        This function returns a mapping of option names to their help strings for displaying to the user
-
-        Usage:
-
-        .. code-block:: python
-
-            def display_completions(substitution, matches, longest_match_length):
-                _display_completions = argcomplete.autocomplete.get_display_completions()
-                print("")
-                if _display_completions:
-                    help_len = [len(x) for x in _display_completions.values() if x]
-
-                    if help_len:
-                        maxlen = max([len(x) for x in _display_completions])
-                        print("\\n".join("{0:{2}} -- {1}".format(k, v, maxlen)
-                                        for k, v in sorted(_display_completions.items())))
-                    else:
-                        print("    ".join(k for k in sorted(_display_completions)))
-                else:
-                    print(" ".join(x for x in sorted(matches)))
-
-                import readline
-                print("cli /> {0}".format(readline.get_line_buffer()), end="")
-                readline.redisplay()
-
-            ...
-            readline.set_completion_display_matches_hook(display_completions)
-
-        """
-        return {" ".join(k): v for k, v in self._display_completions.items()}
-
-
-class ExclusiveCompletionFinder(CompletionFinder):
-    @staticmethod
-    def _action_allowed(action, parser):
-        if not CompletionFinder._action_allowed(action, parser):
-            return False
-
-        append_classes = (argparse._AppendAction, argparse._AppendConstAction)
-        if action._orig_class in append_classes:
-            return True
-
-        if action not in parser._seen_non_default_actions:
-            return True
-
-        return False
-
+from .completers import ChoicesCompleter, DirectoriesCompleter, EnvironCompleter, FilesCompleter, SuppressCompleter
+from .exceptions import ArgcompleteException
+from .finders import CompletionFinder, ExclusiveCompletionFinder, safe_actions
+from .io import debug, mute_stderr, warn
+from .lexers import split_line
+from .shell_integration import shellcode
 
 autocomplete = CompletionFinder()
 autocomplete.__doc__ = """ Use this to access argcomplete. See :meth:`argcomplete.CompletionFinder.__call__()`. """
-
-
-def warn(*args):
-    """
-    Prints **args** to standard error when running completions. This will interrupt the user's command line interaction;
-    use it to indicate an error condition that is preventing your completer from working.
-    """
-    # Don't be tempted to use `print("\n",..., *args)`,
-    # as that will indent **args** by one space character
-    print(file=debug_stream)
-    print(file=debug_stream, *args)
Only in /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete: io.py
Only in /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete: lexers.py
Only in /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/argcomplete: my_argparse.py
Only in /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/argcomplete: my_shlex.py
Only in /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete: packages
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/argcomplete/shell_integration.py /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete/shell_integration.py
--- /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/argcomplete/shell_integration.py	2023-03-19 08:53:17.000000000 +0000
+++ /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/argcomplete/shell_integration.py	2023-03-23 21:37:26.538323131 +0000
@@ -1,9 +1,10 @@
 #!/usr/bin/env python
+# Copyright 2012-2023, Andrey Kislyuk and argcomplete contributors. Licensed under the terms of the
+# `Apache License, Version 2.0 <http://www.apache.org/licenses/LICENSE-2.0>`_. Distribution of the LICENSE and NOTICE
+# files with source copies of this package and derivative works is **REQUIRED** as specified by the Apache License.
+# See https://github.com/kislyuk/argcomplete for more info.
 
-try:
-    from shlex import quote
-except ImportError:
-    from pipes import quote
+from shlex import quote
 
 bashcode = r"""
 # Run something, muting output or redirecting it to the debug stream
@@ -32,25 +33,42 @@
 
 _python_argcomplete%(function_suffix)s() {
     local IFS=$'\013'
-    local SUPPRESS_SPACE=0
-    if compopt +o nospace 2> /dev/null; then
-        SUPPRESS_SPACE=1
-    fi
-    COMPREPLY=( $(IFS="$IFS" \
-                  COMP_LINE="$COMP_LINE" \
-                  COMP_POINT="$COMP_POINT" \
-                  COMP_TYPE="$COMP_TYPE" \
-                  _ARGCOMPLETE_COMP_WORDBREAKS="$COMP_WORDBREAKS" \
-                  _ARGCOMPLETE=1 \
-                  _ARGCOMPLETE_SUPPRESS_SPACE=$SUPPRESS_SPACE \
-                  __python_argcomplete_run "%(argcomplete_script)s") )
-    if [[ $? != 0 ]]; then
-        unset COMPREPLY
-    elif [[ $SUPPRESS_SPACE == 1 ]] && [[ "${COMPREPLY-}" =~ [=/:]$ ]]; then
-        compopt -o nospace
+    if [[ -n "${ZSH_VERSION-}" ]]; then
+        local completions
+        completions=($(IFS="$IFS" \
+            COMP_LINE="$BUFFER" \
+            COMP_POINT="$CURSOR" \
+            _ARGCOMPLETE=1 \
+            _ARGCOMPLETE_SHELL="zsh" \
+            _ARGCOMPLETE_SUPPRESS_SPACE=1 \
+            __python_argcomplete_run "${words[1]}") )
+        _describe "${words[1]}" completions -o nosort
+    else
+        local SUPPRESS_SPACE=0
+        if compopt +o nospace 2> /dev/null; then
+            SUPPRESS_SPACE=1
+        fi
+        COMPREPLY=($(IFS="$IFS" \
+            COMP_LINE="$COMP_LINE" \
+            COMP_POINT="$COMP_POINT" \
+            COMP_TYPE="$COMP_TYPE" \
+            _ARGCOMPLETE_COMP_WORDBREAKS="$COMP_WORDBREAKS" \
+            _ARGCOMPLETE=1 \
+            _ARGCOMPLETE_SHELL="bash" \
+            _ARGCOMPLETE_SUPPRESS_SPACE=$SUPPRESS_SPACE \
+            __python_argcomplete_run "%(argcomplete_script)s"))
+        if [[ $? != 0 ]]; then
+            unset COMPREPLY
+        elif [[ $SUPPRESS_SPACE == 1 ]] && [[ "${COMPREPLY-}" =~ [=/:]$ ]]; then
+            compopt -o nospace
+        fi
     fi
 }
-complete %(complete_opts)s -F _python_argcomplete%(function_suffix)s %(executables)s
+if [[ -z "${ZSH_VERSION-}" ]]; then
+    complete %(complete_opts)s -F _python_argcomplete%(function_suffix)s %(executables)s
+else
+    compdef _python_argcomplete%(function_suffix)s %(executables)s
+fi
 """
 
 tcshcode = """\
@@ -106,7 +124,7 @@
 
     :param list(str) executables: Executables to be completed (when invoked exactly with this name)
     :param bool use_defaults: Whether to fallback to readline's default completion when no matches are generated.
-    :param str shell: Name of the shell to output code for (bash or tcsh)
+    :param str shell: Name of the shell to output code for
     :param complete_arguments: Arguments to call complete with
     :type complete_arguments: list(str) or None
     :param argcomplete_script: Script to call complete with, if not the executable to complete.
@@ -119,7 +137,7 @@
     else:
         complete_options = " ".join(complete_arguments)
 
-    if shell == "bash":
+    if shell == "bash" or shell == "zsh":
         quoted_executables = [quote(i) for i in executables]
         executables_list = " ".join(quoted_executables)
         script = argcomplete_script
Only in /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages: argcomplete-2.1.2.dist-info
Only in /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages: argcomplete-3.0.4.dist-info
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/PyYAML-6.0.dist-info/METADATA /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/PyYAML-6.0.dist-info/METADATA
--- /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/PyYAML-6.0.dist-info/METADATA	2023-03-19 08:53:17.000000000 +0000
+++ /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/PyYAML-6.0.dist-info/METADATA	2023-03-23 21:37:26.538323131 +0000
@@ -3,10 +3,10 @@
 Version: 6.0
 Summary: YAML parser and emitter for Python
 Home-page: https://pyyaml.org/
+Download-URL: https://pypi.org/project/PyYAML/
 Author: Kirill Simonov
 Author-email: xi@resolvent.net
 License: MIT
-Download-URL: https://pypi.org/project/PyYAML/
 Project-URL: Bug Tracker, https://github.com/yaml/pyyaml/issues
 Project-URL: CI, https://github.com/yaml/pyyaml/actions
 Project-URL: Documentation, https://pyyaml.org/wiki/PyYAMLDocumentation
@@ -43,4 +43,3 @@
 
 PyYAML is applicable for a broad range of tasks from complex
 configuration files to object serialization and persistence.
-
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/PyYAML-6.0.dist-info/RECORD /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/PyYAML-6.0.dist-info/RECORD
--- /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/PyYAML-6.0.dist-info/RECORD	2023-03-19 08:53:17.000000000 +0000
+++ /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/PyYAML-6.0.dist-info/RECORD	2023-03-23 21:37:26.538323131 +0000
@@ -1,8 +1,8 @@
 PyYAML-6.0.dist-info/INSTALLER,sha256=zuuue4knoyJ-UwPPXg8fezS7VCrXJQrAP7zeNuwvFQg,4
 PyYAML-6.0.dist-info/LICENSE,sha256=jTko-dxEkP1jVwfLiOsmvXZBAqcoKVQwfT5RZ6V36KQ,1101
-PyYAML-6.0.dist-info/METADATA,sha256=QmHx9kGp_0yezQCXYaft4eEFeJ6W4oyFfYwHDLP1kdg,2006
+PyYAML-6.0.dist-info/METADATA,sha256=Q56A1jQxEnzMMCyqgYkqM5Egvr9y18VExGF3ciGLjlY,2005
 PyYAML-6.0.dist-info/RECORD,,
-PyYAML-6.0.dist-info/WHEEL,sha256=RiwktpmF40OphKd3_aIG01PzIOQlJ7dpBn3cFSc9vak,217
+PyYAML-6.0.dist-info/WHEEL,sha256=q64M4lAWOr6eqbs0L0fvZKS87xBNWz2Lb7YBpE1K7J4,104
 PyYAML-6.0.dist-info/top_level.txt,sha256=rpj0IVMTisAjh_1vG3Ccf9v5jpCQwAz6cD1IVU5ZdhQ,11
 _yaml/__init__.py,sha256=04Ae_5osxahpJHa3XBZUAf4wi6XX32gR8D6X6p64GEA,1402
 _yaml/__pycache__/__init__.cpython-38.pyc,,
@@ -24,7 +24,6 @@
 yaml/__pycache__/scanner.cpython-38.pyc,,
 yaml/__pycache__/serializer.cpython-38.pyc,,
 yaml/__pycache__/tokens.cpython-38.pyc,,
-yaml/_yaml.cpython-38-x86_64-linux-gnu.so,sha256=lMaKSmQZy3WNZSmmU0Wg5Y5ZAs-HR5vItyGVUIsp8Rg,2847784
 yaml/composer.py,sha256=_Ko30Wr6eDWUeUpauUGT3Lcg9QPBnOPVlTnIMRGJ9FM,4883
 yaml/constructor.py,sha256=kNgkfaeLUkwQYY_Q6Ff1Tz2XVw_pG1xVE9Ak7z-viLA,28639
 yaml/cyaml.py,sha256=6ZrAG9fAYvdVe2FK_w0hmXoG7ZYsoYUwapG8CiC72H0,3851
diff --suppress-common-lines -u -r -x '*.pyc' -x installed-files.txt /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/PyYAML-6.0.dist-info/WHEEL /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/PyYAML-6.0.dist-info/WHEEL
--- /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/PyYAML-6.0.dist-info/WHEEL	2023-03-19 08:53:17.000000000 +0000
+++ /tmp/tmp.FETsdqlzeJ/lib/python3.8/site-packages/PyYAML-6.0.dist-info/WHEEL	2023-03-23 21:37:26.538323131 +0000
@@ -1,8 +1,5 @@
 Wheel-Version: 1.0
-Generator: bdist_wheel (0.37.0)
+Generator: bdist_wheel (0.40.0)
 Root-Is-Purelib: false
-Tag: cp38-cp38-manylinux_2_5_x86_64
-Tag: cp38-cp38-manylinux1_x86_64
-Tag: cp38-cp38-manylinux_2_12_x86_64
-Tag: cp38-cp38-manylinux2010_x86_64
+Tag: cp38-cp38-linux_ppc64le
 
Only in /tmp/tmp.tscHRQZ6eS/lib/python3.8/site-packages/yaml: _yaml.cpython-38-x86_64-linux-gnu.so
***** END DIFF
DIFF START *****
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/java11-maven-lombok__lombok-project-sample/devworkspace-che-code-insiders.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/java11-maven-lombok__lombok-project-sample/devworkspace-che-code-insiders.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/java11-maven-lombok__lombok-project-sample/devworkspace-che-code-insiders.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/java11-maven-lombok__lombok-project-sample/devworkspace-che-code-insiders.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/java11-maven-lombok__lombok-project-sample/devworkspace-che-code-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/java11-maven-lombok__lombok-project-sample/devworkspace-che-code-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/java11-maven-lombok__lombok-project-sample/devworkspace-che-code-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/java11-maven-lombok__lombok-project-sample/devworkspace-che-code-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/java11-maven-lombok__lombok-project-sample/devworkspace-che-idea-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/java11-maven-lombok__lombok-project-sample/devworkspace-che-idea-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/java11-maven-lombok__lombok-project-sample/devworkspace-che-idea-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/java11-maven-lombok__lombok-project-sample/devworkspace-che-idea-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: idea-rhel8-injector
+    - id: init-che-idea-command
+      exec:
+        component: idea-rhel8
+        commandLine: >-
+          nohup /projector/entrypoint-volume.sh > /projector/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-idea-command
   components:
     - name: idea-rhel8
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /projector/entrypoint-volume.sh
         env:
           - name: PROJECTOR_ASSEMBLY_DIR
             value: /projector
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/java11-maven-quarkus__quarkus-quickstarts/devworkspace-che-code-insiders.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/java11-maven-quarkus__quarkus-quickstarts/devworkspace-che-code-insiders.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/java11-maven-quarkus__quarkus-quickstarts/devworkspace-che-code-insiders.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/java11-maven-quarkus__quarkus-quickstarts/devworkspace-che-code-insiders.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/java11-maven-quarkus__quarkus-quickstarts/devworkspace-che-code-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/java11-maven-quarkus__quarkus-quickstarts/devworkspace-che-code-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/java11-maven-quarkus__quarkus-quickstarts/devworkspace-che-code-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/java11-maven-quarkus__quarkus-quickstarts/devworkspace-che-code-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/java11-maven-quarkus__quarkus-quickstarts/devworkspace-che-idea-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/java11-maven-quarkus__quarkus-quickstarts/devworkspace-che-idea-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/java11-maven-quarkus__quarkus-quickstarts/devworkspace-che-idea-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/java11-maven-quarkus__quarkus-quickstarts/devworkspace-che-idea-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: idea-rhel8-injector
+    - id: init-che-idea-command
+      exec:
+        component: idea-rhel8
+        commandLine: >-
+          nohup /projector/entrypoint-volume.sh > /projector/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-idea-command
   components:
     - name: idea-rhel8
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /projector/entrypoint-volume.sh
         env:
           - name: PROJECTOR_ASSEMBLY_DIR
             value: /projector
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/nodejs__nodejs-mongodb-sample/devworkspace-che-code-insiders.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/nodejs__nodejs-mongodb-sample/devworkspace-che-code-insiders.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/nodejs__nodejs-mongodb-sample/devworkspace-che-code-insiders.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/nodejs__nodejs-mongodb-sample/devworkspace-che-code-insiders.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/nodejs__nodejs-mongodb-sample/devworkspace-che-code-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/nodejs__nodejs-mongodb-sample/devworkspace-che-code-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/nodejs__nodejs-mongodb-sample/devworkspace-che-code-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/nodejs__nodejs-mongodb-sample/devworkspace-che-code-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/nodejs__nodejs-mongodb-sample/devworkspace-che-idea-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/nodejs__nodejs-mongodb-sample/devworkspace-che-idea-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/nodejs__nodejs-mongodb-sample/devworkspace-che-idea-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/nodejs__nodejs-mongodb-sample/devworkspace-che-idea-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: idea-rhel8-injector
+    - id: init-che-idea-command
+      exec:
+        component: idea-rhel8
+        commandLine: >-
+          nohup /projector/entrypoint-volume.sh > /projector/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-idea-command
   components:
     - name: idea-rhel8
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /projector/entrypoint-volume.sh
         env:
           - name: PROJECTOR_ASSEMBLY_DIR
             value: /projector
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/nodejs__web-nodejs-sample/devworkspace-che-code-insiders.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/nodejs__web-nodejs-sample/devworkspace-che-code-insiders.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/nodejs__web-nodejs-sample/devworkspace-che-code-insiders.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/nodejs__web-nodejs-sample/devworkspace-che-code-insiders.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/nodejs__web-nodejs-sample/devworkspace-che-code-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/nodejs__web-nodejs-sample/devworkspace-che-code-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/nodejs__web-nodejs-sample/devworkspace-che-code-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/nodejs__web-nodejs-sample/devworkspace-che-code-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/nodejs__web-nodejs-sample/devworkspace-che-idea-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/nodejs__web-nodejs-sample/devworkspace-che-idea-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/nodejs__web-nodejs-sample/devworkspace-che-idea-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/nodejs__web-nodejs-sample/devworkspace-che-idea-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: idea-rhel8-injector
+    - id: init-che-idea-command
+      exec:
+        component: idea-rhel8
+        commandLine: >-
+          nohup /projector/entrypoint-volume.sh > /projector/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-idea-command
   components:
     - name: idea-rhel8
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /projector/entrypoint-volume.sh
         env:
           - name: PROJECTOR_ASSEMBLY_DIR
             value: /projector
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/python__python-hello-world/devworkspace-che-code-insiders.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/python__python-hello-world/devworkspace-che-code-insiders.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/python__python-hello-world/devworkspace-che-code-insiders.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/python__python-hello-world/devworkspace-che-code-insiders.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/python__python-hello-world/devworkspace-che-code-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/python__python-hello-world/devworkspace-che-code-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/python__python-hello-world/devworkspace-che-code-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/python__python-hello-world/devworkspace-che-code-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/python__python-hello-world/devworkspace-che-idea-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/python__python-hello-world/devworkspace-che-idea-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/python__python-hello-world/devworkspace-che-idea-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/python__python-hello-world/devworkspace-che-idea-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: idea-rhel8-injector
+    - id: init-che-idea-command
+      exec:
+        component: idea-rhel8
+        commandLine: >-
+          nohup /projector/entrypoint-volume.sh > /projector/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-idea-command
   components:
     - name: idea-rhel8
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /projector/entrypoint-volume.sh
         env:
           - name: PROJECTOR_ASSEMBLY_DIR
             value: /projector
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/TP__cpp__c-plus-plus/devworkspace-che-code-insiders.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/TP__cpp__c-plus-plus/devworkspace-che-code-insiders.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/TP__cpp__c-plus-plus/devworkspace-che-code-insiders.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/TP__cpp__c-plus-plus/devworkspace-che-code-insiders.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/TP__cpp__c-plus-plus/devworkspace-che-code-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/TP__cpp__c-plus-plus/devworkspace-che-code-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/TP__cpp__c-plus-plus/devworkspace-che-code-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/TP__cpp__c-plus-plus/devworkspace-che-code-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/TP__cpp__c-plus-plus/devworkspace-che-idea-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/TP__cpp__c-plus-plus/devworkspace-che-idea-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/TP__cpp__c-plus-plus/devworkspace-che-idea-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/TP__cpp__c-plus-plus/devworkspace-che-idea-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: idea-rhel8-injector
+    - id: init-che-idea-command
+      exec:
+        component: idea-rhel8
+        commandLine: >-
+          nohup /projector/entrypoint-volume.sh > /projector/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-idea-command
   components:
     - name: idea-rhel8
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /projector/entrypoint-volume.sh
         env:
           - name: PROJECTOR_ASSEMBLY_DIR
             value: /projector
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/TP__dotnet__dotnet-web-simple/devworkspace-che-code-insiders.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/TP__dotnet__dotnet-web-simple/devworkspace-che-code-insiders.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/TP__dotnet__dotnet-web-simple/devworkspace-che-code-insiders.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/TP__dotnet__dotnet-web-simple/devworkspace-che-code-insiders.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/TP__dotnet__dotnet-web-simple/devworkspace-che-code-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/TP__dotnet__dotnet-web-simple/devworkspace-che-code-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/TP__dotnet__dotnet-web-simple/devworkspace-che-code-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/TP__dotnet__dotnet-web-simple/devworkspace-che-code-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/TP__dotnet__dotnet-web-simple/devworkspace-che-idea-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/TP__dotnet__dotnet-web-simple/devworkspace-che-idea-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/TP__dotnet__dotnet-web-simple/devworkspace-che-idea-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/TP__dotnet__dotnet-web-simple/devworkspace-che-idea-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: idea-rhel8-injector
+    - id: init-che-idea-command
+      exec:
+        component: idea-rhel8
+        commandLine: >-
+          nohup /projector/entrypoint-volume.sh > /projector/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-idea-command
   components:
     - name: idea-rhel8
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /projector/entrypoint-volume.sh
         env:
           - name: PROJECTOR_ASSEMBLY_DIR
             value: /projector
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/TP__go__golang-health-check/devworkspace-che-code-insiders.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/TP__go__golang-health-check/devworkspace-che-code-insiders.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/TP__go__golang-health-check/devworkspace-che-code-insiders.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/TP__go__golang-health-check/devworkspace-che-code-insiders.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/TP__go__golang-health-check/devworkspace-che-code-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/TP__go__golang-health-check/devworkspace-che-code-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/TP__go__golang-health-check/devworkspace-che-code-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/TP__go__golang-health-check/devworkspace-che-code-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/TP__go__golang-health-check/devworkspace-che-idea-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/TP__go__golang-health-check/devworkspace-che-idea-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/TP__go__golang-health-check/devworkspace-che-idea-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/TP__go__golang-health-check/devworkspace-che-idea-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: idea-rhel8-injector
+    - id: init-che-idea-command
+      exec:
+        component: idea-rhel8
+        commandLine: >-
+          nohup /projector/entrypoint-volume.sh > /projector/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-idea-command
   components:
     - name: idea-rhel8
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /projector/entrypoint-volume.sh
         env:
           - name: PROJECTOR_ASSEMBLY_DIR
             value: /projector
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/TP__php__php-hello-world/devworkspace-che-code-insiders.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/TP__php__php-hello-world/devworkspace-che-code-insiders.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/TP__php__php-hello-world/devworkspace-che-code-insiders.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/TP__php__php-hello-world/devworkspace-che-code-insiders.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/TP__php__php-hello-world/devworkspace-che-code-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/TP__php__php-hello-world/devworkspace-che-code-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/TP__php__php-hello-world/devworkspace-che-code-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/TP__php__php-hello-world/devworkspace-che-code-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: che-code-injector
+    - id: init-che-code-command
+      exec:
+        component: che-code-runtime-description
+        commandLine: >-
+          nohup /checode/entrypoint-volume.sh > /checode/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-code-command
   components:
     - name: che-code-runtime-description
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /checode/entrypoint-volume.sh
         volumeMounts:
           - name: checode
             path: /checode
diff --suppress-common-lines -u -r /tmp/tmp.9rzxf76LG7/devfiles/TP__php__php-hello-world/devworkspace-che-idea-latest.yaml /tmp/tmp.Tw4j5BVhSM/devfiles/TP__php__php-hello-world/devworkspace-che-idea-latest.yaml
--- /tmp/tmp.9rzxf76LG7/devfiles/TP__php__php-hello-world/devworkspace-che-idea-latest.yaml	2023-03-06 16:58:55.000000000 +0000
+++ /tmp/tmp.Tw4j5BVhSM/devfiles/TP__php__php-hello-world/devworkspace-che-idea-latest.yaml	2023-03-23 21:37:28.088282346 +0000
@@ -7,15 +7,21 @@
     - id: init-container-command
       apply:
         component: idea-rhel8-injector
+    - id: init-che-idea-command
+      exec:
+        component: idea-rhel8
+        commandLine: >-
+          nohup /projector/entrypoint-volume.sh > /projector/entrypoint-logs.txt
+          2>&1 &
   events:
     preStart:
       - init-container-command
+    postStart:
+      - init-che-idea-command
   components:
     - name: idea-rhel8
       container:
         image: registry.redhat.io/devspaces/udi-rhel8:3.6
-        command:
-          - /projector/entrypoint-volume.sh
         env:
           - name: PROJECTOR_ASSEMBLY_DIR
             value: /projector
Binary files /tmp/tmp.9rzxf76LG7/resources/v2/php-hello-world.zip and /tmp/tmp.Tw4j5BVhSM/resources/v2/php-hello-world.zip differ
***** END DIFF
Untagged: localhost/devfileregistry:tmp
Deleted: d64173756a0e1de661ba6df967c4168b6d850566ec71a4b9b8f4fcf1ba2b14b9
Deleted: 9c463bedeea3a7e0c66068908ba37865823f31df934a6851d0e2e4ab3ee70eac
Deleted: bb6819930b1d9cca7ab17aca9f0aaad2a43f2a7bdc228df91d478a2af07e30bb
Deleted: 4e079bc1a5fc8a4f02cf8046541c4d27eff5df992629bd26f75070e370716f29
Deleted: 03634d48d149ce83edb4742d2fe51f2c2935d0dd3eeef7d9f7aadf1c1a278993
Deleted: 5d06c42c4ba81efaf68478a24f03229edb74d3c856e5377cc5d38801b68d755a
Deleted: bb6ad48452817c87604e89a8cb3930299a7b3ad9b325be48ac5d25bc1ded4daa
Deleted: 51dba62aa27e653b8e326a0888ee6105285c3edf3a2336643e5b3342246761eb
Deleted: de9e7184d2dfac5179aa008c20bdd3d804509002ecdd555e996ea29f0885b13a
Deleted: 510dd063ceb263e9bbe78ada31b93b339251b2c199b7a7e1db3ce25d87c9f467
Deleted: 12b6169702f4f699a154207126153249c3c0c9efb64855e1825eb612251e521e
Deleted: b0932a6105e1a1aa849c1a10f3fec73a9afb18ef4432db4cd53ab0f1abd8ea3a
Deleted: 0749b24551ea7c794f1737615cfacf6a06cc00fd637802c071a03b3f396c4775
Deleted: a7d1eb796abb156ebc195cc04962f043bad1757c9ee87170bdf486ed36e9991e
Deleted: 899a43692691e47479d6b36a72dc9761645d6d67edba530cf4177a73f36c64bb
Deleted: 9786b3b4f1f179953381a5bf39462f75e1040ec96bf89b3450447332282410f3
Deleted: e5a54f8a2d0fadf9d080fa423df362668415018aa4ea8bd899b0bcd34f6304ae
Deleted: 66d1e0748c6116f6a8450f52c5c880d8e071aeec4df118853cabc9e67302fe51
Deleted: 62d05c20a5d883b3bf766e6c1ffa567c72eecc690c279f48bee59e11fa8c3100
Deleted: 369dd454fd18c16c36d71fbb7f4817dd9e7b66b5543dd9a07538100f57bac0d4
Deleted: eb75b543a2ba5746e172811f1e4bb99e349d92cd4f13b0c3753c7f28ea54b288
Deleted: 0a289735a18b55a2b8ea8a6b6f07876f752ff7e1fa08d0af69d3f274502dbd83
Uploading: root-local.tgz
Uploading: resources.tgz
Source upload succeeded. Don't forget to commit the sources file
rm 'resources.tgz'
rm 'root-local.tgz'
