#!/usr/bin/env groovy

import groovy.transform.Field

// PARAMETERS for this pipeline:
// MIDSTM_BRANCH
// CSV_VERSION

def buildNode = "x86_64-rhel8-dyn"
timeout(240) {
  node("${buildNode}"){
    stage("Collect 3rd party sources") {
      wrap([$class: 'TimestamperBuildWrapper']) {
        withCredentials([string(credentialsId:'crw_devstudio-release-token', variable: 'GITHUB_TOKEN'),
            file(credentialsId: 'devspaces-build-keytab', variable: 'DS_KEYTAB')]) {
          sh('curl -sSLO https://raw.githubusercontent.com/redhat-developer/devspaces/'+ MIDSTM_BRANCH + '/product/util2.groovy')
          def util = load "${WORKSPACE}/util2.groovy"
          cleanWs()
          currentBuild.description=""
          CSV_VERSION = util.globalVar({CSV_VERSION})?.trim() ? util.globalVar({CSV_VERSION}) : util.getCSVVersion(MIDSTM_BRANCH)
          println "CSV_VERSION = '" + CSV_VERSION + "'"

          currentBuild.description="Collecting sources for " + CSV_VERSION + " ..."
          util.cloneRepo("https://github.com/redhat-developer/devspaces.git", "devspaces", MIDSTM_BRANCH, false)

          sh '''#!/bin/bash -xe
# TODO CRW-1919 remove this when we no longer need it 
export KRB5CCNAME=/var/tmp/devspaces-build_ccache

# generate source files and --publish
cd ${WORKSPACE}/devspaces/product/manifest/ && ./get-3rd-party-sources.sh --clean -b ''' + MIDSTM_BRANCH + ''' -v ''' + CSV_VERSION + ''' ''' + PUBLISH_ARTIFACTS + '''
'''
          currentBuild.description="Sources collected for " + CSV_VERSION + (PUBLISH_ARTIFACTS.equals("--publish") ? "; pushed to spmm-util" : "")
        } // with
      } // wrap
    } // stage
  } //node
} // timeout
